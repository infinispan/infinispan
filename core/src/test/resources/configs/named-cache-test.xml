<?xml version="1.0" encoding="UTF-8"?>
<infinispan
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="urn:infinispan:config:12.1 https://infinispan.org/schemas/infinispan-config-12.1.xsd"
        xmlns="urn:infinispan:config:12.1">

   <threads>
      <thread-factory name="listener-factory" group-name="infinispan" thread-name-pattern="AsyncListenerThread"/>
      <thread-factory name="blocking-factory" group-name="infinispan" thread-name-pattern="BlockingThread"/>
      <thread-factory name="non-blocking-factory" group-name="infinispan" thread-name-pattern="NonBlockingThread"/>
      <thread-factory name="expiration-factory" group-name="infinispan" thread-name-pattern="ExpirationThread"/>
      <thread-factory name="replication-queue-factory" group-name="infinispan" thread-name-pattern="ReplicationQueueThread"/>
      <blocking-bounded-queue-thread-pool name="listener" thread-factory="listener-factory" max-threads="5" queue-length="10000"/>
      <blocking-bounded-queue-thread-pool name="blocking" thread-factory="blocking-factory" max-threads="6" queue-length="10001"/>
      <non-blocking-bounded-queue-thread-pool name="non-blocking" thread-factory="non-blocking-factory" max-threads="5" core-threads="5" queue-length="10000"/>
      <scheduled-thread-pool name="expiration" thread-factory="expiration-factory" />
      <scheduled-thread-pool name="replication-queue" thread-factory="replication-queue-factory" />
   </threads>

   <jgroups>
      <stack-file name="test-tcp" path="stacks/tcp.xml"/>
   </jgroups>

   <cache-container default-cache="default" statistics="true" shutdown-hook="REGISTER"
                    listener-executor="listener" blocking-executor="blocking"
                    expiration-executor="expiration" non-blocking-executor="non-blocking">
      <transport stack="test-tcp" cluster="infinispan-cluster" lock-timeout="50000" node-name="Jalapeno" machine="m1" rack="r1" site="s1" />
      <security>
         <authorization audit-logger="org.infinispan.security.audit.NullAuditLogger">
            <identity-role-mapper/>
            <role name="peasant" permissions="READ"/>
            <role name="vavasour" permissions="READ WRITE"/>
            <role name="vassal" permissions="READ WRITE LISTEN"/>
            <role name="king" permissions="ALL"/>
         </authorization>
      </security>
      <serialization marshaller="org.infinispan.marshall.TestObjectStreamMarshaller">
         <advanced-externalizer id="1234" class="org.infinispan.marshall.AdvancedExternalizerTest$IdViaConfigObj$Externalizer"/>
         <advanced-externalizer class="org.infinispan.marshall.AdvancedExternalizerTest$IdViaAnnotationObj$Externalizer"/>
         <advanced-externalizer id="3456" class="org.infinispan.marshall.AdvancedExternalizerTest$IdViaBothObj$Externalizer"/>
      </serialization>
      <jmx enabled="true" domain="funky_domain" mbean-server-lookup="org.infinispan.commons.jmx.TestMBeanServerLookup"/>
      <local-cache name="default" statistics="false">
         <locking concurrency-level="100" acquire-timeout="1000"/>
         <transaction mode="NONE" complete-timeout="3123" reaper-interval="123"/>
      </local-cache>
      <local-cache name="transactional">
         <transaction mode="NON_XA" auto-commit="true" />
      </local-cache>
      <local-cache name="transactional2">
         <transaction transaction-manager-lookup="org.infinispan.test.tx.TestLookup" stop-timeout="10000" locking="PESSIMISTIC" auto-commit="false" />
      </local-cache>
      <invalidation-cache name="syncInval">
         <locking acquire-timeout="20000"/>
      </invalidation-cache>
      <invalidation-cache name="asyncInval" mode="ASYNC">
         <locking acquire-timeout="20000"/>
      </invalidation-cache>
      <replicated-cache name="syncRepl" mode="SYNC" remote-timeout="15000">
         <state-transfer enabled="false"/>
      </replicated-cache>
      <replicated-cache name="asyncRepl" mode="ASYNC" >
         <state-transfer enabled="false"/>
      </replicated-cache>
      <replicated-cache name="txSyncRepl" mode="SYNC" remote-timeout="15000">
         <transaction mode="NON_XA" transaction-manager-lookup="org.infinispan.transaction.lookup.GenericTransactionManagerLookup"/>
         <state-transfer enabled="false"/>
      </replicated-cache>
      <local-cache name="overriding">
         <locking isolation="REPEATABLE_READ" concurrency-level="1000" acquire-timeout="20000"/>
      </local-cache>
      <local-cache name="storeAsBinary">
         <locking isolation="REPEATABLE_READ" concurrency-level="1000" acquire-timeout="20000"/>
         <store-as-binary/>
      </local-cache>
      <local-cache name="withFileStore">
         <persistence passivation="false">
            <file-store path="/tmp/FileCacheStore-Location" fetch-state="true" preload="true" purge="false" read-only="false">
               <write-behind modification-queue-size="700" />
            </file-store>
         </persistence>
      </local-cache>
      <local-cache name="withEmptyStore">
         <persistence>
            <file-store path="/tmp/FileCacheStore-Location"/>
         </persistence>
      </local-cache>
      <local-cache name="withClusterLoader">
         <persistence passivation="false">
            <cluster-loader remote-timeout="15000"/>
         </persistence>
      </local-cache>
      <local-cache name="withLoaderDefaults">
         <persistence>
            <file-store path="/tmp/Another-FileCacheStore-Location" />
         </persistence>
      </local-cache>
      <distributed-cache name="dist" mode="SYNC" owners="3" l1-lifespan="600000" l1-cleanup-interval="1200"
                         consistent-hash-factory="org.infinispan.distribution.ch.impl.DefaultConsistentHashFactory">
         <state-transfer timeout="120000" />
      </distributed-cache>
      <distributed-cache name="dist_with_capacity_factors" mode="SYNC" owners="3" segments="1000" capacity="0" l1-lifespan="600000">
         <state-transfer timeout="120000" />
      </distributed-cache>
      <distributed-cache name="groups">
         <groups enabled="true">
            <grouper class="org.infinispan.distribution.groups.KXGrouper" />
         </groups>
      </distributed-cache>
      <distributed-cache name="chunkSize" mode="SYNC" owners="3" l1-lifespan="600000">
         <state-transfer enabled="true" timeout="120000" chunk-size="1000"/>
      </distributed-cache>
      <local-cache name="evictionCache">
         <expiration interval="500" lifespan="60000" max-idle="1000" touch="ASYNC"/>
         <memory>
            <object strategy="REMOVE" size="5000"/>
         </memory>
      </local-cache>
      <local-cache name="evictionMemoryExceptionCache">
         <transaction mode="NON_DURABLE_XA" auto-commit="true"  />
         <memory>
            <binary strategy="EXCEPTION" eviction="MEMORY" size="5000"/>
         </memory>
      </local-cache>
      <replicated-cache name="withouthJmxEnabled" mode="ASYNC" statistics="false"/>
      <local-cache name="cacheWithCustomInterceptors">
         <custom-interceptors>
            <interceptor position="FIRST" class="org.infinispan.interceptors.impl.CallInterceptor" />
            <interceptor position="LAST" class="org.infinispan.interceptors.impl.CallInterceptor"/>
            <interceptor index="3" class="org.infinispan.interceptors.impl.CallInterceptor"/>
            <interceptor before="org.infinispan.interceptors.impl.CallInterceptor" class="org.infinispan.interceptors.impl.CallInterceptor"/>
            <interceptor after="org.infinispan.interceptors.impl.CallInterceptor" class="org.infinispan.interceptors.impl.CallInterceptor"/>
            <interceptor position="FIRST" class="org.infinispan.interceptors.FooInterceptor">
               <property name="foo">bar</property>
            </interceptor>
         </custom-interceptors>
      </local-cache>
      <local-cache name="storeKeyValueBinary">
         <store-as-binary keys="true" values="false"/>
      </local-cache>
      <local-cache name="statisticsDisabled" statistics="false" statistics-available="false">
         <transaction notifications="false" />
      </local-cache>
      <local-cache name="simplCache" simple-cache="true"/>
   </cache-container>

</infinispan>
