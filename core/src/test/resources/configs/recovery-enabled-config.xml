<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source
  ~ Copyright 2011 Red Hat Inc. and/or its affiliates and other
  ~ contributors as indicated by the @author tags. All rights reserved.
  ~ See the copyright.txt in the distribution for a full listing of
  ~ individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<infinispan
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:infinispan:config:5.2 http://www.infinispan.org/schemas/infinispan-config-5.2.xsd"
      xmlns="urn:infinispan:config:5.2">

   <global>

      <asyncListenerExecutor factory="org.infinispan.executors.DefaultExecutorFactory">
      	 <properties>
         	<property name="maxThreads" value="5"/>
         	<property name="threadNamePrefix" value="AsyncListenerThread"/>
         </properties>
      </asyncListenerExecutor>

      <asyncTransportExecutor factory="org.infinispan.executors.DefaultExecutorFactory">
      	<properties>
         <property name="maxThreads" value="25"/>
         <property name="threadNamePrefix" value="AsyncSerializationThread"/>
         </properties>
      </asyncTransportExecutor>

      <evictionScheduledExecutor factory="org.infinispan.executors.DefaultScheduledExecutorFactory">
      <properties>
         <property name="threadNamePrefix" value="EvictionThread"/>
         </properties>
      </evictionScheduledExecutor>

      <replicationQueueScheduledExecutor factory="org.infinispan.executors.DefaultScheduledExecutorFactory">
      <properties>
         <property name="threadNamePrefix" value="ReplicationQueueThread"/>
         </properties>
      </replicationQueueScheduledExecutor>

      <transport clusterName="infinispan-cluster" distributedSyncTimeout="50000" nodeName="Jalapeno" machineId="m1" rackId="r1" siteId="s1">
         <!-- Note that the JGroups transport uses sensible defaults if no configuration property is defined. -->
         <properties>
         <property name="configurationFile" value="jgroups-udp.xml"/>
         </properties>
         <!-- See the JGroupsTransport javadocs for more flags -->
      </transport>

      <serialization marshallerClass="org.infinispan.marshall.VersionAwareMarshaller" version="1.0">
         <advancedExternalizers>
            <advancedExternalizer id="1234" externalizerClass="org.infinispan.marshall.AdvancedExternalizerTest$IdViaConfigObj$Externalizer"/>
            <advancedExternalizer externalizerClass="org.infinispan.marshall.AdvancedExternalizerTest$IdViaAnnotationObj$Externalizer"/>
            <advancedExternalizer id="3456" externalizerClass="org.infinispan.marshall.AdvancedExternalizerTest$IdViaBothObj$Externalizer"/>
         </advancedExternalizers>
      </serialization>

      <globalJmxStatistics enabled="false" jmxDomain="funky_domain"
                           mBeanServerLookup="org.infinispan.jmx.PerThreadMBeanServerLookup"
                           allowDuplicateDomains="true"/>

      <shutdown hookBehavior="REGISTER"/>
   </global>

   <default>
      <locking concurrencyLevel="100" lockAcquisitionTimeout="1000"/>
      <jmxStatistics enabled="false"/>
   </default>

   <namedCache name="noRecovery">
      <transaction useEagerLocking="true" eagerLockSingleNode="true" transactionManagerLookupClass="org.infinispan.transaction.lookup.GenericTransactionManagerLookup">
         <recovery enabled="false" recoveryInfoCacheName="someName"/>
      </transaction>
   </namedCache>

   <namedCache name="withRecoveryDefaultCache">
      <transaction useEagerLocking="true" eagerLockSingleNode="true">
         <recovery enabled="true"/>
      </transaction>
   </namedCache>

   <namedCache name="withRecoveryAndCache">
      <transaction useEagerLocking="true" eagerLockSingleNode="true">
         <recovery enabled="true" recoveryInfoCacheName="noRecovery"/>
      </transaction>
   </namedCache>

   <namedCache name="withRecoveryAndAsync">

      <clustering mode="repl">
         <stateTransfer fetchInMemoryState="false"/>
         <async asyncMarshalling="false"/>
      </clustering>

      <transaction useEagerLocking="true" eagerLockSingleNode="true">
         <recovery enabled="true" recoveryInfoCacheName="noRecovery"/>
      </transaction>
   </namedCache>

</infinispan>
