<infinispan
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:infinispan:config:8.0 http://www.infinispan.org/schemas/infinispan-config-8.0.xsd"
      xmlns="urn:infinispan:config:8.0">
   <jgroups transport="org.infinispan.remoting.transport.jgroups.JGroupsTransport">
      <stack-file name="udp" path="jgroups-udp.xml"/>
      <stack-file name="tcp" path="jgroups-tcp.xml"/>
   </jgroups>
   <threads>
      <thread-factory name="infinispan-factory" group-name="infinispan" thread-name-pattern="%G %i" priority="5"/>
      <!-- listener-executor -->
      <blocking-bounded-queue-thread-pool name="infinispan-async" thread-factory="infinispan-factory"
            core-threads="5" max-threads="5" queue-length="0" keepalive-time="0"/>
      <!-- listener-executor -->
      <blocking-bounded-queue-thread-pool name="infinispan-listener" thread-factory="infinispan-factory"
            core-threads="1" max-threads="1" queue-length="0" keepalive-time="0"/>
      <!-- transport.executor -->
      <blocking-bounded-queue-thread-pool name="infinispan-transport" thread-factory="infinispan-factory"
            core-threads="5" max-threads="10" queue-length="100" keepalive-time="10000"/>
      <!-- state-transfer-executor -->
      <blocking-bounded-queue-thread-pool name="infinispan-state-transfer" thread-factory="infinispan-factory"
            core-threads="1" max-threads="60" queue-length="0" keepalive-time="0"/>
      <!-- transport.total-order-executor, transport.remote-command-executor, persistence-executor -->
      <cached-thread-pool name="infinispan-cached" thread-factory="infinispan-factory" />
      <!-- expiration-executor -->
      <scheduled-thread-pool name="infinispan-expiration" thread-factory="infinispan-factory" />
      <!-- replication-queue-executor -->
      <scheduled-thread-pool name="infinispan-repl-queue" thread-factory="infinispan-factory" />
   </threads>

   <cache-container name="maximal" aliases="alias1 alias2" default-cache="local" async-executor="infinispan-async" expiration-executor="infinispan-expiration"
                    jndi-name="java:global/infinispan/maximal"  state-transfer-executor="infinispan-state-transfer" listener-executor="infinispan-listener" replication-queue-executor="infinispan-repl-queue"
                    persistence-executor="infinispan-cached" module="org.infinispan" statistics="true" shutdown-hook="DONT_REGISTER">
      <transport cluster="maximal-cluster" executor="infinispan-transport" total-order-executor="infinispan-cached" remote-command-executor="infinispan-cached" lock-timeout="120000" stack="tcp" node-name="a-node" machine="a" rack="b" site="c"/>
      <serialization marshaller="org.infinispan.marshall.core.VersionAwareMarshaller" version="1.0">
         <advanced-externalizer class="org.infinispan.marshall.AdvancedExternalizerTest$IdViaConfigObj$Externalizer" id="9001" />
         <advanced-externalizer class="org.infinispan.marshall.AdvancedExternalizerTest$IdViaAnnotationObj$Externalizer" id="9002" />
      </serialization>
      <jmx domain="my-domain" mbean-server-lookup="org.infinispan.jmx.CustomMBeanServerPropertiesTest$TestLookup" duplicate-domains="true">
         <property name="key">value</property>
      </jmx>
      <local-cache name="local" start="EAGER" module="org.infinispan" statistics="true">
         <locking acquire-timeout="30000" concurrency-level="2000" isolation="NONE" striping="true"/>
         <transaction mode="FULL_XA" stop-timeout="60000" locking="OPTIMISTIC" transaction-manager-lookup="org.infinispan.transaction.lookup.JBossStandaloneJTAManagerLookup" complete-timeout="34000" reaper-interval="35000" auto-commit="true" />
         <eviction max-entries="20000" strategy="LIRS"/>
         <expiration interval="10000" lifespan="10" max-idle="10"/>
         <persistence passivation="false">
            <file-store path="path" relative-to="jboss.server.temp.dir" shared="true" singleton="false" fetch-state="false" preload="true" purge="false">
               <write-behind flush-lock-timeout="2" modification-queue-size="2048" shutdown-timeout="20000" thread-pool-size="1" />
            </file-store>
         </persistence>
      </local-cache>
      <invalidation-cache name="invalid" mode="ASYNC" queue-flush-interval="10" queue-size="1000" start="EAGER" statistics="true">
         <locking acquire-timeout="30500" concurrency-level="2500" isolation="READ_UNCOMMITTED" striping="true"/>
         <transaction mode="BATCH" stop-timeout="60500"  locking="OPTIMISTIC"/>
         <eviction size="20500" strategy="LRU" type="MEMORY"/>
         <expiration interval="10500" lifespan="11" max-idle="11"/>
      </invalidation-cache>
      <replicated-cache name="repl" mode="ASYNC" queue-flush-interval="11" queue-size="1500" start="EAGER" statistics="true">
         <locking acquire-timeout="31000" concurrency-level="3000" isolation="SERIALIZABLE" striping="true"/>
         <transaction mode="BATCH" stop-timeout="61000" locking="PESSIMISTIC"/>
         <eviction max-entries="21000" strategy="FIFO"/>
         <expiration interval="11000" lifespan="12" max-idle="12"/>
         <persistence>
            <cluster-loader remote-timeout="35000" preload="true"/>
         </persistence>
         <state-transfer enabled="false" timeout="60000" chunk-size="10000" />
      </replicated-cache>
      <distributed-cache name="dist" mode="SYNC" l1-lifespan="1200000" owners="4"
                         remote-timeout="35000" start="EAGER" segments="2" statistics="true"
                         consistent-hash-factory="org.infinispan.distribution.ch.impl.SyncConsistentHashFactory">
         <backups>
            <backup site="NYC" failure-policy="WARN" strategy="SYNC" timeout="12500" enabled="false">
               <state-transfer chunk-size="600" timeout="2400000"/>
            </backup>
            <backup site="SFO" failure-policy="IGNORE" strategy="ASYNC" timeout="13000" enabled="true"/>
            <backup site="LON" failure-policy="FAIL" strategy="SYNC" timeout="13500" enabled="true">
               <take-offline after-failures="3" min-wait="10000"/>
            </backup>
         </backups>
         <backup-for remote-cache="users" remote-site="LON"/>
         <locking acquire-timeout="31500" concurrency-level="3500" isolation="READ_COMMITTED" striping="true"/>
         <transaction mode="FULL_XA" stop-timeout="61500" locking="OPTIMISTIC"/>
         <eviction max-entries="21500" strategy="UNORDERED"/>
         <expiration interval="11500" lifespan="13" max-idle="13"/>
         <partition-handling enabled="true"/>
         <state-transfer enabled="true" timeout="60500" chunk-size="10500" />
      </distributed-cache>
      <replicated-cache name="capedwarf-data" mode="ASYNC">
         <transaction mode="NON_XA"/>
         <eviction strategy="NONE" max-entries="-1"/>
         <persistence passivation="false">
            <file-store preload="true" purge="false"/>
         </persistence>
      </replicated-cache>
      <replicated-cache name="capedwarf-metadata" mode="ASYNC">
         <transaction mode="NON_XA"/>
         <eviction strategy="NONE" max-entries="-1"/>
         <persistence passivation="true">
            <store class="org.infinispan.persistence.dummy.DummyInMemoryStore" />
         </persistence>
      </replicated-cache>
      <replicated-cache name="capedwarf-memcache" mode="ASYNC">
         <transaction mode="NON_XA" locking="PESSIMISTIC"/>
         <eviction strategy="NONE" max-entries="-1"/>
      </replicated-cache>
      <distributed-cache name="capedwarf-default" mode="ASYNC">
         <transaction mode="NON_XA"/>
         <eviction strategy="NONE" max-entries="-1"/>
         <persistence passivation="true">
            <file-store preload="true" purge="false"/>
         </persistence>
      </distributed-cache>
      <distributed-cache name="capedwarf-dist" mode="ASYNC">
         <transaction mode="NON_XA" locking="PESSIMISTIC"/>
         <eviction strategy="NONE" max-entries="-1"/>
         <persistence passivation="true">
            <file-store preload="true" purge="false"/>
         </persistence>
      </distributed-cache>
      <distributed-cache name="capedwarf-tasks" mode="ASYNC">
         <transaction mode="NON_XA"/>
         <eviction strategy="LIRS" max-entries="10000"/>
         <persistence passivation="true">
            <file-store preload="true" purge="false"/>
         </persistence>
      </distributed-cache>
      <replicated-cache name="HibernateSearch-LuceneIndexesMetadata" mode="SYNC">
         <transaction mode="BATCH"/>
         <eviction strategy="NONE" max-entries="-1"/>
         <persistence passivation="true">
            <file-store preload="true" purge="false"/>
         </persistence>
      </replicated-cache>
      <replicated-cache name="HibernateSearch-LuceneIndexesData" mode="SYNC">
         <transaction mode="BATCH"/>
         <eviction strategy="NONE" max-entries="-1"/>
         <persistence passivation="true">
            <file-store preload="true" purge="false"/>
         </persistence>
      </replicated-cache>
      <replicated-cache name="HibernateSearch-LuceneIndexesLocking" mode="SYNC">
         <transaction mode="BATCH"/>
         <eviction strategy="NONE" max-entries="-1"/>
      </replicated-cache>
      <local-cache name="custom-interceptors" unreliable-return-values="true">
         <custom-interceptors>
            <interceptor class="org.infinispan.configuration.parsing.UnifiedXmlFileParsingTest$CustomInterceptor1" after="org.infinispan.interceptors.InvocationContextInterceptor"/>
            <interceptor class="org.infinispan.configuration.parsing.UnifiedXmlFileParsingTest$CustomInterceptor2" before="org.infinispan.interceptors.InvocationContextInterceptor"/>
            <interceptor class="org.infinispan.configuration.parsing.UnifiedXmlFileParsingTest$CustomInterceptor3" index="1"/>
            <interceptor class="org.infinispan.configuration.parsing.UnifiedXmlFileParsingTest$CustomInterceptor4" position="LAST">
               <property name="foo">bar</property>
            </interceptor>
         </custom-interceptors>
      </local-cache>
      <local-cache name="write-skew" deadlock-detection-spin="-1">
         <locking isolation="REPEATABLE_READ" write-skew="true"/>
         <transaction locking="OPTIMISTIC"/>
         <versioning scheme="SIMPLE"/>
      </local-cache>
      <local-cache name="compatibility" deadlock-detection-spin="200">
         <compatibility marshaller="org.infinispan.commons.marshall.jboss.GenericJBossMarshaller" />
      </local-cache>
      <local-cache name="custom-container">
         <data-container class="org.infinispan.configuration.QueryableDataContainer"
                         key-equivalence="org.infinispan.commons.equivalence.ByteArrayEquivalence"
                         value-equivalence="org.infinispan.commons.equivalence.ByteArrayEquivalence">
            <property name="foo">bar</property>
         </data-container>
      </local-cache>
      <local-cache name="store-as-binary">
         <store-as-binary keys="true" values="false"/>
      </local-cache>
   </cache-container>
</infinispan>
