<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source
  ~ Copyright 2012 Red Hat Inc. and/or its affiliates and other
  ~ contributors as indicated by the @author tags. All rights reserved.
  ~ See the copyright.txt in the distribution for a full listing of
  ~ individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>org.infinispan</groupId>
   <artifactId>infinispan-parent</artifactId>
      <version>5.3.0-SNAPSHOT</version>
   <packaging>pom</packaging>
   <name>Infinispan Common Parent</name>
   <description>Infinispan common parent POM module</description>
   <url>http://www.infinispan.org</url>
   <organization>
      <name>JBoss, a division of Red Hat</name>
      <url>http://www.jboss.org</url>
   </organization>
   <licenses>
      <license>
         <name>GNU Lesser General Public License</name>
         <url>http://repository.jboss.org/licenses/lgpl-2.1.txt</url>
         <distribution>repo</distribution>
      </license>
   </licenses>
   <developers>
      <developer>
         <id>placeholder</id>
         <name>See http://www.infinispan.org for a complete list of contributors</name>
      </developer>
   </developers>
   <mailingLists>
      <mailingList>
         <name>Infinispan Issues</name>
         <subscribe>https://lists.jboss.org/mailman/listinfo/infinispan-issues</subscribe>
         <unsubscribe>https://lists.jboss.org/mailman/listinfo/infinispan-issues</unsubscribe>
         <post>infinispan-issues@lists.jboss.org</post>
         <archive>http://lists.jboss.org/pipermail/infinispan-issues/</archive>
      </mailingList>
      <mailingList>
         <name>Infinispan Developers</name>
         <subscribe>https://lists.jboss.org/mailman/listinfo/infinispan-dev</subscribe>
         <unsubscribe>https://lists.jboss.org/mailman/listinfo/infinispan-dev</unsubscribe>
         <post>infinispan-dev@lists.jboss.org</post>
         <archive>http://lists.jboss.org/pipermail/infinispan-dev/</archive>
      </mailingList>
   </mailingLists>
   <scm>
      <connection>scm:git:git@github.com:infinispan/infinispan.git</connection>
      <developerConnection>scm:git:git@github.com:infinispan/infinispan.git</developerConnection>
      <url>https://github.com/infinispan/infinispan</url>
   </scm>
   <issueManagement>
      <system>jira</system>
      <url>https://issues.jboss.org/browse/ISPN</url>
   </issueManagement>
   <ciManagement>
      <system>TeamCity</system>
      <url>http://ci.infinispan.org</url>
      <notifiers>
         <notifier>
            <type>mail</type>
            <address>infinispan-commits@lists.jboss.org</address>
         </notifier>
      </notifiers>
   </ciManagement>
   <distributionManagement>
      <repository>
         <id>jboss-releases-repository</id>
         <name>JBoss Release Repository</name>
         <url>${jboss.releases.repo.url}</url>
      </repository>
      <snapshotRepository>
         <id>jboss-snapshots-repository</id>
         <name>JBoss Snapshot Repository</name>
         <url>${jboss.snapshots.repo.url}</url>
      </snapshotRepository>
   </distributionManagement>
   <properties>
      <buildDirectory>target</buildDirectory>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
      <defaultTestGroup>functional,unit,arquillian</defaultTestGroup>
      <testNGListener>org.infinispan.test.fwk.UnitTestTestNGListener</testNGListener>
      <infinispan.test.parallel.threads>20</infinispan.test.parallel.threads>
      <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
      <jboss.releases.repo.url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</jboss.releases.repo.url>
      <jboss.snapshots.repo.url>https://repository.jboss.org/nexus/content/repositories/snapshots/</jboss.snapshots.repo.url>
      <packaging>jar</packaging>
      <module.skipComponentMetaDataProcessing>true</module.skipComponentMetaDataProcessing>
      <module.metadata.isCoreModule>false</module.metadata.isCoreModule>
      <!-- Versions for dependencies -->
      <version.aesh>0.24</version.aesh>
      <version.antlr>3.4</version.antlr>
      <version.apacheds.jdbm>1.5.7</version.apacheds.jdbm>
      <version.arquillian>1.0.3.Final</version.arquillian>
      <version.arquillian.container.weld>1.0.0.CR3</version.arquillian.container.weld>
      <version.avro>1.3.3</version.avro>
      <version.bdbje>5.0.34</version.bdbje>
      <version.c3p0>0.9.1.2</version.c3p0>
      <version.cassandra>1.0.2</version.cassandra>
      <version.cassandra.pool>1.0.0.CR1</version.cassandra.pool>
      <version.cdi>1.0-SP4</version.cdi>
      <version.com.intellij.forms_rt>6.0.5</version.com.intellij.forms_rt>
      <version.commons.compress>1.4</version.commons.compress>
      <version.commons.codec>1.4</version.commons.codec>
      <version.commons.collections>3.2.1</version.commons.collections>
      <version.commons.dbcp>1.4</version.commons.dbcp>
      <version.commons.pool>1.6</version.commons.pool>
      <version.commons.httpclient>3.1</version.commons.httpclient>
      <version.commons.io>1.3.2</version.commons.io>
      <version.commons.logging>1.1</version.commons.logging>
      <version.commons.math>2.2</version.commons.math>
      <version.gnu.getopt>1.0.13</version.gnu.getopt>
      <version.guava>11.0.2</version.guava>
      <version.h2.driver>1.3.166</version.h2.driver>
      <version.hadoop.core>1.0.3</version.hadoop.core>
      <version.hbase>0.94.1</version.hbase>
      <version.hibernate.annotations>3.4.0.GA</version.hibernate.annotations>
      <version.hibernate.core>3.3.1.GA</version.hibernate.core>
      <version.hibernate.search>4.2.0.Final</version.hibernate.search>
      <version.jackson>1.9.2</version.jackson>
      <version.javax.cache>0.6</version.javax.cache>
      <version.javax.persistence>1.0</version.javax.persistence>
      <version.javax.servlet>2.5</version.javax.servlet>
      <version.jboss.marshalling>1.3.15.GA</version.jboss.marshalling>
      <version.jboss.as>7.1.1.Final</version.jboss.as>
      <version.jbossjta>4.16.3.Final</version.jbossjta>
      <version.osgi>4.3.0</version.osgi>
      <version.jboss.logging>3.1.1.GA</version.jboss.logging>
      <version.jboss.logging.processor>1.0.3.Final</version.jboss.logging.processor>
      <version.jboss.logmanager>1.3.1.Final</version.jboss.logmanager>
      <version.jboss.spec>1.0.0.Final</version.jboss.spec>
      <version.jcipannotations>1.0</version.jcipannotations>
      <version.jclouds>1.4.1</version.jclouds>
      <version.jetty>6.1.25</version.jetty>
      <version.jgoodies.forms>1.0.5</version.jgoodies.forms>
      <version.jgroups>3.3.0.CR1</version.jgroups>
      <version.jsap>2.1</version.jsap>
      <version.json>20090211</version.json>
      <version.jstl>1.2</version.jstl>
      <version.jta>1.0.0.Final</version.jta>
      <version.junit>4.10</version.junit>
      <version.log4j>1.2.16</version.log4j>
      <version.lucene.v3>3.6.2</version.lucene.v3>
      <version.lucene.v4>4.2.0</version.lucene.v4>
      <version.mc4j>1.2.6</version.mc4j>
      <version.milyn.smooks>1.2.2</version.milyn.smooks>
      <version.mockito>1.8.5</version.mockito>
      <version.mysql.driver>5.1.19</version.mysql.driver>
      <version.netty>3.6.1.Final</version.netty>
      <version.org.jboss.naming>5.0.6.CR1</version.org.jboss.naming>
      <version.resteasy>2.3.2.Final</version.resteasy>
      <version.rhq>4.2.0</version.rhq>
      <version.scala>2.10.0</version.scala>
      <version.shrinkwrapResolver>2.0.0-alpha-6</version.shrinkwrapResolver>
      <version.slf4j>1.6.4</version.slf4j>
      <version.solder>3.1.0.Final</version.solder>
      <version.spring>3.1.0.RELEASE</version.spring>
      <version.spymemcached>2.5</version.spymemcached>
      <version.testng>6.8</version.testng>
      <version.testng.arquillian>6.5.2</version.testng.arquillian>
      <version.webdav.servlet>2.0.1</version.webdav.servlet>
      <version.weld>1.1.8.Final</version.weld>
      <version.xstream>1.4.1</version.xstream>
      <version.javassist>3.15.0-GA</version.javassist>
      <version.org.jboss.staxmapper>1.1.0.Final</version.org.jboss.staxmapper>
      <version.maven.bundle>2.3.7</version.maven.bundle>
      <version.maven.source>2.2.1</version.maven.source>
      <version.maven.scala>2.15.2</version.maven.scala>
      <version.maven.surefire>2.14</version.maven.surefire>
      <version.maven.invoker>1.8</version.maven.invoker>
      <version.jacoco>0.5.10.201208310627</version.jacoco>
      <version.asm>3.3.1</version.asm>
      <reportTitle>Infinispan JaCoCo Report</reportTitle>
      <dir.ispn>../</dir.ispn>
      <dir.report>../jacoco-html</dir.report>
   </properties>
   
   <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cachestore-jdbc</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cachestore-jdbc</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cachestore-jdbm</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cachestore-remote</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cdi</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-client-hotrod</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-client-hotrod</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-core</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-core</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-ec2-demo</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-lucene-directory</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-lucene-directory</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-lucene-v3</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-lucene-v4</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-query</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-core</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-core</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-hotrod</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-hotrod</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-memcached</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-memcached</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-rest</artifactId>
            <classifier>classes</classifier>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-rest</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-tools</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-tree</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-upgrade-tools</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-jcache</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <version>${version.c3p0}</version>
         </dependency>
         <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${version.h2.driver}</version>
         </dependency>
         <dependency>
            <groupId>com.intellij</groupId>
            <artifactId>forms_rt</artifactId>
            <version>${version.com.intellij.forms_rt}</version>
         </dependency>
         <dependency>
            <groupId>com.martiansoftware</groupId>
            <artifactId>jsap</artifactId>
            <version>${version.jsap}</version>
         </dependency>
         <dependency>
            <groupId>com.sleepycat</groupId>
            <artifactId>je</artifactId>
            <version>${version.bdbje}</version>
         </dependency>
         <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>${version.xstream}</version>
         </dependency>
         <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${version.commons.dbcp}</version>
         </dependency>
         <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>${version.commons.httpclient}</version>
         </dependency>
         <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${version.commons.io}</version>
         </dependency>
         <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>${version.commons.logging}</version>
            <scope>runtime</scope>
         </dependency>
         <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>${version.commons.pool}</version>
         </dependency>
         <dependency>
            <groupId>gnu-getopt</groupId>
            <artifactId>getopt</artifactId>
            <version>${version.gnu.getopt}</version>
         </dependency>
         <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>${version.javassist}</version>
         </dependency>
         <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <version>${version.javax.cache}</version>
         </dependency>
         <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-tests</artifactId>
            <version>${version.javax.cache}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cdi-weld-annotations-test-harness</artifactId>
            <version>${version.javax.cache}</version>
         </dependency>
         <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>${version.cdi}</version>
         </dependency>
         <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>${version.javax.persistence}</version>
         </dependency>
         <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${version.jstl}</version>
         </dependency>
         <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${version.javax.servlet}</version>
         </dependency>
         <dependency>
            <groupId>jgoodies</groupId>
            <artifactId>forms</artifactId>
            <version>${version.jgoodies.forms}</version>
         </dependency>
         <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${version.log4j}</version>
         </dependency>
         <dependency>
            <groupId>mc4j</groupId>
            <artifactId>org-mc4j-ems</artifactId>
            <version>${version.mc4j}</version>
         </dependency>
         <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${version.mysql.driver}</version>
         </dependency>
         <dependency>
            <groupId>net.dataforte.cassandra</groupId>
            <artifactId>cassandra-connection-pool</artifactId>
            <version>${version.cassandra.pool}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-core</artifactId>
            <version>${version.hadoop.core}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-test</artifactId>
            <version>${version.hadoop.core}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase</artifactId>
            <version>${version.hbase}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase</artifactId>
            <version>${version.hbase}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
         </dependency>
         <dependency>
            <groupId>net.sf.webdav-servlet</groupId>
            <artifactId>webdav-servlet</artifactId>
            <version>${version.webdav.servlet}</version>
         </dependency>
         <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr-runtime</artifactId>
            <version>${version.antlr}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.cassandra</groupId>
            <artifactId>cassandra-thrift</artifactId>
            <version>${version.cassandra}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.cassandra</groupId>
            <artifactId>cassandra-all</artifactId>
            <version>${version.cassandra}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>${version.commons.compress}</version>
         </dependency>
         <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${version.commons.codec}</version>
         </dependency>
         <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${version.commons.collections}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math</artifactId>
            <version>${version.commons.math}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-jdbm</artifactId>
            <version>${version.apacheds.jdbm}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>avro</artifactId>
            <version>${version.avro}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <version>${version.jackson}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${version.jackson}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${version.hibernate.core}</version>
            <scope>provided</scope>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-annotations</artifactId>
            <version>${version.hibernate.annotations}</version>
            <scope>provided</scope>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-engine</artifactId>
            <version>${version.hibernate.search}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-analyzers</artifactId>
            <version>${version.hibernate.search}</version>
            <optional>true</optional>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-infinispan</artifactId>
            <version>${version.hibernate.search}</version>
            <optional>true</optional>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-engine</artifactId>
            <version>${version.hibernate.search}</version>
            <type>test-jar</type>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.arquillian</groupId>
            <artifactId>arquillian-bom</artifactId>
            <version>${version.arquillian}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
            <version>${version.arquillian.container.weld}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-bom</artifactId>
            <version>${version.shrinkwrapResolver}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.1_spec</artifactId>
            <version>${version.jta}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <version>${version.jboss.spec}</version>
            <type>pom</type>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <version>${version.jboss.logging}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.marshalling</groupId>
            <artifactId>jboss-marshalling</artifactId>
            <version>${version.jboss.marshalling}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.marshalling</groupId>
            <artifactId>jboss-marshalling-river</artifactId>
            <version>${version.jboss.marshalling}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.naming</groupId>
            <artifactId>jnp-client</artifactId>
            <version>${version.org.jboss.naming}</version>
            <exclusions>
               <exclusion>
                  <artifactId>jboss-logging-spi</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.jboss.naming</groupId>
            <artifactId>jnpserver</artifactId>
            <version>${version.org.jboss.naming}</version>
            <exclusions>
               <exclusion>
                  <artifactId>jboss-logging-spi</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty</artifactId>
            <version>${version.netty}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.logmanager</groupId>
            <artifactId>jboss-logmanager</artifactId>
            <version>${version.jboss.logmanager}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>${version.resteasy}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.solder</groupId>
            <artifactId>solder-impl</artifactId>
            <version>${version.solder}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core</artifactId>
            <version>${version.weld}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se</artifactId>
            <version>${version.weld}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>staxmapper</artifactId>
            <version>${version.org.jboss.staxmapper}</version>
         </dependency>
         <dependency>
            <groupId>org.jclouds</groupId>
            <artifactId>jclouds-blobstore</artifactId>
            <version>${version.jclouds}</version>
         </dependency>
         <dependency>
            <groupId>org.jclouds.driver</groupId>
            <artifactId>jclouds-enterprise</artifactId>
            <version>${version.jclouds}</version>
         </dependency>
         <dependency>
            <groupId>org.jclouds.driver</groupId>
            <artifactId>jclouds-log4j</artifactId>
            <version>${version.jclouds}</version>
         </dependency>
         <dependency>
            <groupId>org.jclouds</groupId>
            <artifactId>jclouds-allblobstore</artifactId>
            <version>${version.jclouds}</version>
         </dependency>
         <dependency>
            <groupId>org.jgroups</groupId>
            <artifactId>jgroups</artifactId>
            <version>${version.jgroups}</version>
         </dependency>
         <dependency>
             <groupId>org.jboss.aesh</groupId>
             <artifactId>aesh</artifactId>
             <version>${version.aesh}</version>
         </dependency>
         <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${version.json}</version>
         </dependency>
         <dependency>
            <groupId>org.milyn</groupId>
            <artifactId>milyn-smooks-javabean</artifactId>
            <version>${version.milyn.smooks}</version>
         </dependency>
         <dependency>
            <groupId>org.milyn</groupId>
            <artifactId>milyn-smooks-csv</artifactId>
            <version>${version.milyn.smooks}</version>
         </dependency>
         <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-embedded</artifactId>
            <version>${version.jetty}</version>
         </dependency>
         <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>${version.osgi}</version>
         </dependency>
         <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-core-domain</artifactId>
            <version>${version.rhq}</version>
         </dependency>
         <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-core-plugin-api</artifactId>
            <version>${version.rhq}</version>
            <exclusions>
               <exclusion>
                  <groupId>com.sun.xml.bind</groupId>
                  <artifactId>jaxb-impl</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-jmx-plugin</artifactId>
            <version>${version.rhq}</version>
         </dependency>
         <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${version.scala}</version>
         </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${version.slf4j}</version>
         </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${version.slf4j}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${version.slf4j}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${version.spring}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${version.spring}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${version.spring}</version>
         </dependency>
         <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${version.testng}</version>
            <scope>test</scope>
            <exclusions>
              <exclusion>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
              </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>spy</groupId>
            <artifactId>memcached</artifactId>
            <version>${version.spymemcached}</version>
         </dependency>
      </dependencies>
   </dependencyManagement>
   <dependencies>
      <!-- used to serialize non-serializable objects for a dummy marshaller -->
      <dependency>
         <groupId>com.thoughtworks.xstream</groupId>
         <artifactId>xstream</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>net.jcip</groupId>
         <artifactId>jcip-annotations</artifactId>
         <version>${version.jcipannotations}</version>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-all</artifactId>
         <version>${version.mockito}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.jbossts</groupId>
         <artifactId>jbossjta</artifactId>
         <version>${version.jbossjta}</version>
         <scope>test</scope>
         <exclusions>
            <exclusion>
               <artifactId>commons-httpclient</artifactId>
               <groupId>commons-httpclient</groupId>
            </exclusion>
            <exclusion>
               <artifactId>ironjacamar-spec-api</artifactId>
               <groupId>org.jboss.ironjacamar</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jbogging-spi</artifactId>
               <groupId>org.jboss.logging</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-logging</artifactId>
               <groupId>org.jboss.logging</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-logging-processor</artifactId>
               <groupId>org.jboss.logging</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-logging-generator</artifactId>
               <groupId>org.jboss.logging</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jbossws-native-core</artifactId>
               <groupId>org.jboss.ws.native</groupId>
            </exclusion>
            <exclusion>
               <artifactId>emma</artifactId>
               <groupId>emma</groupId>
            </exclusion>
            <exclusion>
               <artifactId>emma_ant</artifactId>
               <groupId>emma</groupId>
            </exclusion>
            <exclusion>
               <artifactId>hornetq-core</artifactId>
               <groupId>org.hornetq</groupId>
            </exclusion>
            <exclusion>
               <artifactId>netty</artifactId>
               <groupId>org.jboss.netty</groupId>
            </exclusion>
            <exclusion>
               <artifactId>wrapper</artifactId>
               <groupId>tanukisoft</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jacorb</artifactId>
               <groupId>jacorb</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jfreechart</artifactId>
               <groupId>jfree</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-corba-ots-spi</artifactId>
               <groupId>org.jboss.integration</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-server-manager</artifactId>
               <groupId>org.jboss.jbossas</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-ejb-api_3.1_spec</artifactId>
               <groupId>org.jboss.spec.javax.ejb</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jnp-client</artifactId>
               <groupId>org.jboss.naming</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-servlet-api_3.0_spec</artifactId>
               <groupId>org.jboss.spec.javax.servlet</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jbossws-common</artifactId>
               <groupId>org.jboss.ws</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jcl-over-slf4j</artifactId>
               <groupId>org.slf4j</groupId>
            </exclusion>
            <exclusion>
               <artifactId>stax-api</artifactId>
               <groupId>stax</groupId>
            </exclusion>
            <exclusion>
               <artifactId>idl</artifactId>
               <groupId>jacorb</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-logging-tools</artifactId>
               <groupId>org.jboss.logging</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-connector-api_1.5_spec</artifactId>
               <groupId>org.jboss.spec.javax.resource</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-transaction-spi</artifactId>
               <groupId>org.jboss.integration</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-remoting</artifactId>
               <groupId>org.jboss.remoting</groupId>
            </exclusion>
            <exclusion>
               <artifactId>slf4j-api</artifactId>
               <groupId>org.slf4j</groupId>
            </exclusion>
            <exclusion>
               <artifactId>dom4j</artifactId>
               <groupId>dom4j</groupId>
            </exclusion>
            <exclusion>
               <artifactId>commons-codec</artifactId>
               <groupId>commons-codec</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-logmanager</artifactId>
               <groupId>org.jboss.logmanager</groupId>
            </exclusion>
            <exclusion>
               <artifactId>hibernate-jpa-2.0-api</artifactId>
               <groupId>org.hibernate.javax.persistence</groupId>
            </exclusion>
            <exclusion>
               <artifactId>commons-logging</artifactId>
               <groupId>commons-logging</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jcommon</artifactId>
               <groupId>jfree</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-transaction-api_1.1_spec</artifactId>
               <groupId>org.jboss.spec.javax.transaction</groupId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.jboss.logging</groupId>
         <artifactId>jboss-logging-processor</artifactId>
         <version>${version.jboss.logging.processor}</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
          <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.testng</groupId>
         <artifactId>testng</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>
   <repositories>
      <repository>
         <releases>
            <enabled>true</enabled>
         </releases>
         <snapshots>
            <enabled>true</enabled>
         </snapshots>
         <id>jboss-public-repository</id>
         <name>JBoss Public Repository and Proxy for third party repositories</name>
         <url>https://repository.jboss.org/nexus/content/groups/public</url>
      </repository>
   </repositories>
   <pluginRepositories>
      <pluginRepository>
         <releases>
            <enabled>true</enabled>
         </releases>
         <snapshots>
            <enabled>true</enabled>
         </snapshots>
         <id>jboss-public-plugin-repository</id>
         <name>JBoss Public Plugin Repository and Proxy for third party plugin repositories</name>
         <url>https://repository.jboss.org/nexus/content/groups/public</url>
      </pluginRepository>
      <pluginRepository>
         <releases>
            <enabled>true</enabled>
         </releases>
         <snapshots>
            <enabled>true</enabled>
         </snapshots>
         <id>jboss-public-thirdparty-snapshots</id>
         <name>JBoss Public third party snapshots plugin repositories</name>
         <url>https://repository.jboss.org/nexus/content/groups/public-thirdparty-snapshots</url>
      </pluginRepository>
   </pluginRepositories>
   <build>
      <directory>${buildDirectory}</directory>
      <finalName>${project.artifactId}</finalName>
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.antlr</groupId>
               <artifactId>antlr3-maven-plugin</artifactId>
               <version>${version.antlr}</version>
               <executions>
                 <execution>
                     <goals>
                         <goal>antlr</goal>
                     </goals>
                 </execution>
             </executions>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-clean-plugin</artifactId>
               <version>2.5</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-install-plugin</artifactId>
               <version>2.4</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <version>2.1.1</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-deploy-plugin</artifactId>
               <version>2.7</version>
            </plugin>
            <plugin>
               <groupId>org.apache.felix</groupId>
               <artifactId>maven-bundle-plugin</artifactId>
               <version>${version.maven.bundle}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-assembly-plugin</artifactId>
               <version>2.4</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-dependency-plugin</artifactId>
               <version>2.6</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-failsafe-plugin</artifactId>
               <version>${version.maven.surefire}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-javadoc-plugin</artifactId>
               <version>2.9</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-pmd-plugin</artifactId>
               <!-- See also reporting plugins -->
               <version>2.7.1</version>
               <configuration>
                  <minimumTokens>100</minimumTokens>
                  <targetJdk>1.6</targetJdk>
                  <linkXref>false</linkXref>
                  <sourceEncoding>utf-8</sourceEncoding>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-surefire-plugin</artifactId>
               <version>${version.maven.surefire}</version>
            </plugin>
            <plugin>
               <artifactId>maven-war-plugin</artifactId>
               <version>2.1.1</version>
               <configuration>
                  <attachClasses>false</attachClasses>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>appassembler-maven-plugin</artifactId>
               <version>1.0</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>exec-maven-plugin</artifactId>
               <version>1.2.1</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>ideauidesigner-maven-plugin</artifactId>
               <version>1.0-beta-1</version>
            </plugin>
            <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
            <plugin>
               <groupId>org.eclipse.m2e</groupId>
               <artifactId>lifecycle-mapping</artifactId>
               <version>1.0.0</version>
               <configuration>
                  <lifecycleMappingMetadata>
                     <pluginExecutions>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.apache.maven.plugins</groupId>
                              <artifactId>maven-dependency-plugin</artifactId>
                              <versionRange>[2.0,)</versionRange>
                              <goals>
                                 <goal>copy</goal>
                                 <goal>unpack</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore></ignore>
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.apache.maven.plugins</groupId>
                              <artifactId>maven-javadoc-plugin</artifactId>
                              <versionRange>[2.8,)</versionRange>
                              <goals>
                                 <goal>javadoc</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore></ignore>
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.apache.maven.plugins</groupId>
                              <artifactId>maven-antrun-plugin</artifactId>
                              <versionRange>[1.7,)</versionRange>
                              <goals>
                                 <goal>run</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore></ignore>
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.codehaus.mojo</groupId>
                              <artifactId>exec-maven-plugin</artifactId>
                              <versionRange>[1.2.1,)</versionRange>
                              <goals>
                                 <goal>java</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore></ignore>
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.scala-tools</groupId>
                              <artifactId>maven-scala-plugin</artifactId>
                              <versionRange>[2.15.2,)</versionRange>
                              <goals>
                                 <goal>testCompile</goal>
                                 <goal>compile</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore></ignore>
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.codehaus.mojo</groupId>
                              <artifactId>ideauidesigner-maven-plugin</artifactId>
                              <versionRange>[1.0-beta-1,)</versionRange>
                              <goals>
                                 <goal>javac2</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore></ignore>
                           </action>
                        </pluginExecution>
                     </pluginExecutions>
                  </lifecycleMappingMetadata>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.jboss.maven.plugins</groupId>
               <artifactId>maven-injection-plugin</artifactId>
               <version>1.0.2</version>
            </plugin>
            <plugin>
               <groupId>org.mortbay.jetty</groupId>
               <artifactId>jetty-maven-plugin</artifactId>
               <version>8.0.0.M3</version>
            </plugin>
            <plugin>
               <groupId>org.jacoco</groupId>
               <artifactId>jacoco-maven-plugin</artifactId>
               <version>${version.jacoco}</version>
               <configuration>
                  <includes>
                     <include>org.infinispan.*</include>
                  </includes>
               </configuration>
            </plugin>
         </plugins>
      </pluginManagement>
      <plugins>
         <plugin>
            <artifactId>maven-remote-resources-plugin</artifactId>
            <version>1.1</version>
            <executions>
               <execution>
                  <id>attach-license</id>
                  <goals>
                     <goal>process</goal>
                  </goals>
                  <inherited>true</inherited>
                  <configuration>
                     <resourceBundles>
                        <resourceBundle>org.infinispan:infinispan-license:1</resourceBundle>
                     </resourceBundles>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
               <instructions>
                  <Bundle-DocURL>http://www.infinispan.org/</Bundle-DocURL>
                  <Export-Package>${project.groupId}.*;version=${project.version};-split-package:=error</Export-Package>
               </instructions>
            </configuration>
         </plugin>
         <!-- Copy the resulting persisted metadata into the build directory for packaging into the jar -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <executions>
               <execution>
                  <id>copy_serialized_metadata</id>
                  <phase>process-test-resources</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <skip>${module.skipComponentMetaDataProcessing}</skip>
                     <target>
                        <copy file="${basedir}/src/main/resources/${project.artifactId}-component-metadata.dat" todir="${project.build.outputDirectory}"></copy>
                     </target>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <!-- by default, compile to JDK 1.6 compatibility (individual modules and/or user can override) -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.0</version>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
               <encoding>UTF-8</encoding>
               <compilerArgument>-AtranslationFilesPath=${project.basedir}/target/generated-translation-files</compilerArgument>
            </configuration>
         </plugin>
         <!-- eclipse project file generation -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <version>2.7</version>
            <configuration>
               <downloadSources>true</downloadSources>
               <buildOutputDirectory>${basedir}/eclipse-output</buildOutputDirectory>
            </configuration>
         </plugin>
         <!-- IntelliJ project file generation -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-idea-plugin</artifactId>
            <version>2.2</version>
            <configuration>
               <downloadSources>true</downloadSources>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>2.4</version>
            <executions>
               <execution>
                  <id>build-test-jar</id>
                  <goals>
                     <goal>test-jar</goal>
                  </goals>
                  <configuration>
                     <archive>
                        <manifest>
                           <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                           <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                     </archive>
                     <excludes>
                        <excludes>**/jbossts-properties.xml</excludes>
                     </excludes>
                  </configuration>
               </execution>
            </executions>
            <configuration>
               <archive>
                  <manifest>
                     <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                     <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                     <mainClass>org.infinispan.Version</mainClass>
                  </manifest>
               </archive>
               <excludes>
                  <exclude>**/log4j.xml</exclude>
                  <exclude>**/*.bat</exclude>
                  <exclude>**/*.sh</exclude>
                  <exclude>**/*.txt</exclude>
               </excludes>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
            <version>2.2.2</version>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.6</version>
            <configuration>
               <encoding>UTF-8</encoding>
            </configuration>
         </plugin>
         <!-- ensure parallel test execution -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <parallel>tests</parallel>
               <threadCount>${infinispan.test.parallel.threads}</threadCount>
               <forkCount>1</forkCount>
               <reuseForks>true</reuseForks>
               <groups>${defaultTestGroup}</groups>
               <systemProperties>
                  <property>
                     <name>infinispan.test.jgroups.protocol</name>
                     <value>${infinispan.test.jgroups.protocol}</value>
                  </property>
                  <property>
                     <name>jgroups.bind_addr</name>
                     <value>127.0.0.1</value>
                  </property>
                  <property>
                     <name>java.net.preferIPv4Stack</name>
                     <value>true</value>
                  </property>
                  <property>
                     <name>infinispan.unsafe.allow_jdk8_chm</name>
                     <value>true</value>
                  </property>
                  <property>
                     <name>log4j.configuration</name>
                     <value>${log4j.configuration}</value>
                  </property>
               </systemProperties>
               <trimStackTrace>false</trimStackTrace>
               <properties>
                  <property>
                     <name>listener</name>
                     <value>${testNGListener}</value>
                  </property>
               </properties>
               <argLine>-Xmx1024m -XX:MaxPermSize=1024m</argLine>
            </configuration>
         </plugin>
         <!-- Scan module for components and persist these into a data file, for use at runtime -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>serialize_component_metadata</id>
                  <phase>process-classes</phase>
                  <goals>
                     <goal>java</goal>
                  </goals>
                  <configuration>
                     <skip>${module.skipComponentMetaDataProcessing}</skip>
                     <mainClass>org.infinispan.factories.components.ComponentMetadataPersister</mainClass>
                     <arguments>
                        <argument>${project.build.outputDirectory}</argument>
                        <argument>${basedir}/src/main/resources/${project.artifactId}-component-metadata.dat</argument>
                     </arguments>
                     <systemProperties>
                        <systemProperty>
                           <key>infinispan.isCoreModule</key>
                           <value>${module.metadata.isCoreModule}</value>
                        </systemProperty>
                     </systemProperties>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
   <reporting>
      <plugins>
         <!-- PMD report -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <!-- Needs to be re-defined and configured in pluginManagement section -->
            <version>2.7.1</version>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-report-plugin</artifactId>
            <version>2.12.2</version>
         </plugin>
         <!-- Findbugs report -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
            <version>2.5.2</version>
            <configuration>
               <onlyAnalyze>org.infinispan.*</onlyAnalyze>
               <xmlOutput>true</xmlOutput>
               <xmlOutputDirectory>target</xmlOutputDirectory>
            </configuration>
         </plugin>
      </plugins>
   </reporting>
   <profiles>
      <profile>
         <id>distribution</id>
         <properties>
            <skipTests>true</skipTests>
         </properties>

         <build>
            <plugins>
               <!-- generate target/runtime-classpath.txt, to be included in bundle -->
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-dependency-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>create-classpath</id>
                        <phase>package</phase>
                        <goals>
                           <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                           <includeScope>runtime</includeScope>
                           <excludeScope>test</excludeScope>
                           <prefix>$ISPN_HOME/lib</prefix>
                           <outputFile>${project.build.directory}/runtime-classpath.txt</outputFile>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>extras</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <!-- enforce java 1.6 and maven 2.1.0 -->
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-enforcer-plugin</artifactId>
                  <version>1.0</version>
                  <executions>
                     <execution>
                        <id>enforce-java</id>
                        <goals>
                           <goal>enforce</goal>
                        </goals>
                        <configuration>
                           <rules>
                              <requireJavaVersion>
                                 <version>[1.6,)</version>
                              </requireJavaVersion>
                              <requireMavenVersion>
                                 <version>[2.1.0,)</version>
                              </requireMavenVersion>
                           </rules>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <!-- Make sure we generate src jars too -->
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-source-plugin</artifactId>
                  <version>${version.maven.source}</version>
                  <executions>
                     <execution>
                        <id>attach-sources</id>
                        <goals>
                           <goal>jar</goal>
                           <goal>test-jar</goal>
                        </goals>
                     </execution>
                  </executions>
                  <inherited>true</inherited>
               </plugin>
            </plugins>
         </build>
         <properties>
            <!-- By default create OSGI bundles -->
            <packaging>bundle</packaging>
         </properties>
      </profile>
      <profile>
         <id>test-CI</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <properties>
            <defaultTestGroup>functional,unit,arquillian</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <systemProperties>
                        <property>
                           <!-- this is picked up in the log4j xml which prepends it to each module's log file-->
                           <name>infinispan.module-name</name>
                           <value>${project.artifactId}</value>
                        </property>
                     </systemProperties>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>test-functional</id>
         <properties>
            <defaultTestGroup>functional</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>test-xsite</id>
         <properties>
            <defaultTestGroup>xsite</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>test-unit</id>
         <properties>
            <defaultTestGroup>unit</defaultTestGroup>
         </properties>
      </profile>
      <profile>
         <id>test-jgroups</id>
         <properties>
            <defaultTestGroup>jgroups</defaultTestGroup>
         </properties>
      </profile>
      <profile>
         <id>test-transaction</id>
         <properties>
            <defaultTestGroup>transaction</defaultTestGroup>
         </properties>
      </profile>
      <profile>
         <id>debug-tests</id>
         <properties>
            <testNGListener>org.infinispan.test.fwk.DebuggingUnitTestNGListener</testNGListener>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>nonParallel</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
            <infinispan.test.parallel.threads>1</infinispan.test.parallel.threads>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>traceTests</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <build>
            <plugins>
               <!-- Redefine surefire plugin to avoid external log4j settings
               not being discovered when passed as command line arguments -->
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <systemProperties>
                        <property>
                           <name>log4j.configuration</name>
                           <value>log4j-trace.xml</value>
                        </property>
                     </systemProperties>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>coverage</id>

         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>

         <properties>
            <infinispan.test.parallel.threads>1</infinispan.test.parallel.threads>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>

         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-dependency-plugin</artifactId>
                  <executions>
                     <!-- Copy the ant tasks jar. Needed for ts.jacoco.report-ant . -->
                     <execution>
                        <id>jacoco-dependency-ant</id>
                        <goals>
                           <goal>copy</goal>
                        </goals>
                        <phase>process-test-resources</phase>
                        <inherited>false</inherited>
                        <configuration>
                           <artifactItems>
                              <artifactItem>
                                 <groupId>org.jacoco</groupId>
                                 <artifactId>org.jacoco.ant</artifactId>
                                 <version>${version.jacoco}</version>
                              </artifactItem>
                              <artifactItem>
                                 <groupId>org.jacoco</groupId>
                                 <artifactId>org.jacoco.core</artifactId>
                                 <version>${version.jacoco}</version>
                              </artifactItem>
                              <artifactItem>
                                 <groupId>org.jacoco</groupId>
                                 <artifactId>org.jacoco.report</artifactId>
                                 <version>${version.jacoco}</version>
                              </artifactItem>
                              <artifactItem>
                                 <groupId>asm</groupId>
                                 <artifactId>asm-all</artifactId>
                                 <version>${version.asm}</version>
                              </artifactItem>
                           </artifactItems>
                           <stripVersion>true</stripVersion>
                           <outputDirectory>${basedir}/target/jacoco-jars</outputDirectory>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>

               <!-- Starting jacoco agent for recording code coverage. -->
               <plugin>
                  <groupId>org.jacoco</groupId>
                  <artifactId>jacoco-maven-plugin</artifactId>
                  <executions>
                     <execution>
                        <goals>
                           <goal>prepare-agent</goal>
                        </goals>
                     </execution>
                  </executions>
                  <configuration>
                     <propertyName>jacocoAgent</propertyName>
                  </configuration>
               </plugin>

               <!-- Overriding surefire configuration, for attaching jacoco agent to command line. -->
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration combine.self="override">
                     <argLine>-Xmx1024m -XX:MaxPermSize=1024m ${jacocoAgent}</argLine>
                     <parallel>tests</parallel>
                     <threadCount>${infinispan.test.parallel.threads}</threadCount>
                     <groups>${defaultTestGroup}</groups>
                     <systemProperties>
                        <property>
                           <name>infinispan.test.jgroups.protocol</name>
                           <value>${infinispan.test.jgroups.protocol}</value>
                        </property>
                        <property>
                           <name>jgroups.bind_addr</name>
                           <value>127.0.0.1</value>
                        </property>
                        <property>
                           <name>java.net.preferIPv4Stack</name>
                           <value>true</value>
                        </property>
                        <property>
                           <name>infinispan.unsafe.allow_jdk8_chm</name>
                           <value>true</value>
                        </property>
                     </systemProperties>
                     <trimStackTrace>false</trimStackTrace>
                     <properties>
                        <property>
                           <name>listener</name>
                           <value>${testNGListener}</value>
                        </property>
                     </properties>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>jacocoReport</id>

         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <version>1.7</version>
                  <executions>
                     <execution>
                        <phase>install</phase>
                        <goals>
                           <goal>run</goal>
                        </goals>
                        <configuration combine.self="override">
                           <target>
                              <!-- Execute an ant task within maven -->
                              <taskdef name="report" classname="org.jacoco.ant.ReportTask">
                                 <classpath path="${basedir}/target/jacoco-jars/org.jacoco.ant.jar" />
                                 <classpath path="target/jacoco-jars/org.jacoco.core.jar" />
                                 <classpath path="target/jacoco-jars/org.jacoco.report.jar" />
                                 <classpath path="target/jacoco-jars/asm-all.jar" />
                              </taskdef>

                              <echo message="Deleting previous report" />
                              <delete dir="${dir.report}" />

                              <echo message="Creating report directory" />
                              <mkdir dir="${dir.report}" />

                              <echo message="Generating JaCoCo Reports" />
                              <report>
                                 <!-- Specifying the execution data files locations. -->
                                 <executiondata>
                                    <fileset dir="${dir.ispn}" includes="**/target/jacoco.exec" />
                                 </executiondata>

                                 <!-- Defining the report structure with class and source files. -->
                                 <structure name="${reportTitle}">
                                    <classfiles>
                                       <fileset dir="${dir.ispn}">
                                          <include name="**/target/classes/" />
                                       </fileset>
                                    </classfiles>
                                    <sourcefiles encoding="UTF-8">
                                       <mappedresources>
                                          <fileset dir="${dir.ispn}" includes="**/src/main/java/**/*.java" />
                                          <mapper type="regexp" from="^(.*/java/)(.*)$" to="\2"/>
                                       </mappedresources>
                                    </sourcefiles>

                                 </structure>

                                 <!-- Only HTML report is generated with specified path. -->
                                 <html destdir="${dir.report}" />
                              </report>
                           </target>
                        </configuration>
                     </execution>
                  </executions>
                  <dependencies>
                     <dependency>
                        <groupId>org.jacoco</groupId>
                        <artifactId>org.jacoco.ant</artifactId>
                        <version>${version.jacoco}</version>
                     </dependency>
                  </dependencies>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>32bitstuff</id>
         <activation>
            <property>
               <name>sun.arch.data.model</name>
               <value>32</value>
            </property>
         </activation>
         <build>
            <pluginManagement>
               <plugins>
                  <plugin>
                     <groupId>org.scala-tools</groupId>
                     <artifactId>maven-scala-plugin</artifactId>
                     <version>${version.maven.scala}</version>
                     <executions>
                        <execution>
                           <id>compile</id>
                           <phase>compile</phase>
                           <goals>
                              <goal>compile</goal>
                           </goals>
                        </execution>
                        <execution>
                           <id>test-compile</id>
                           <phase>test-compile</phase>
                           <goals>
                              <goal>testCompile</goal>
                           </goals>
                        </execution>
                        <execution>
                           <phase>process-resources</phase>
                           <goals>
                              <goal>compile</goal>
                           </goals>
                        </execution>
                     </executions>
                     <configuration>
                        <scalaVersion>${version.scala}</scalaVersion>
                        <jvmArgs>
                           <jvmArg>-Xmx256m</jvmArg>
                        </jvmArgs>
                     </configuration>
                  </plugin>
               </plugins>
            </pluginManagement>
         </build>
      </profile>

      <profile>
         <id>64bitstuff</id>
         <activation>
            <property>
               <name>sun.arch.data.model</name>
               <value>64</value>
            </property>
         </activation>
         <build>
            <pluginManagement>
               <plugins>
                  <plugin>
                     <groupId>org.scala-tools</groupId>
                     <artifactId>maven-scala-plugin</artifactId>
                     <version>${version.maven.scala}</version>
                     <executions>
                        <execution>
                           <id>compile</id>
                           <phase>compile</phase>
                           <goals>
                              <goal>compile</goal>
                           </goals>
                        </execution>
                        <execution>
                           <id>test-compile</id>
                           <phase>test-compile</phase>
                           <goals>
                              <goal>testCompile</goal>
                           </goals>
                        </execution>
                        <execution>
                           <phase>process-resources</phase>
                           <goals>
                              <goal>compile</goal>
                           </goals>
                        </execution>
                     </executions>
                     <configuration>
                        <scalaVersion>${version.scala}</scalaVersion>
                        <jvmArgs>
                           <jvmArg>-Xmx256m</jvmArg>
                           <jvmArg>-XX:+UseCompressedOops</jvmArg>
                        </jvmArgs>
                     </configuration>
                  </plugin>
               </plugins>
            </pluginManagement>
         </build>
      </profile>

   </profiles>
</project>
