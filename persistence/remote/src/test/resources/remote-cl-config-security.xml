<?xml version="1.0" encoding="UTF-8"?>
<infinispan
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:infinispan:config:9.1 http://www.infinispan.org/schemas/infinispan-config-9.1.xsd
                          urn:infinispan:config:store:remote:9.0 http://www.infinispan.org/schemas/infinispan-cachestore-remote-config-9.1.xsd"
      xmlns="urn:infinispan:config:9.1"
      xmlns:remote="urn:infinispan:config:store:remote:9.1" >

   <!-- Default cache named to preserve old default cache name -->
   <cache-container default-cache="___defaultcache">
      <local-cache name="___defaultcache">
         <persistence passivation="false">
            <remote-store xmlns="urn:infinispan:config:store:remote:9.1"
                          cache="___defaultcache" fetch-state="false" preload="false" purge="false" shared="true" singleton="false" read-only="false"
                          hotrod-wrapping="false" raw-values="false" socket-timeout="60000"
                          tcp-no-delay="true" balancing-strategy="org.infinispan.client.hotrod.impl.transport.tcp.RoundRobinBalancingStrategy"
                          transport-factory="org.infinispan.client.hotrod.impl.transport.tcp.TcpTransportFactory"
                          key-size-estimate="62" value-size-estimate="512" force-return-values="false">
               <remote-server host="127.0.0.1" port="19711" outbound-socket-binding="hotrod-server-1" />
               <connection-pool max-active="99" max-idle="97" max-total="98"/>
               <async-executor factory="org.infinispan.client.hotrod.impl.async.DefaultAsyncExecutorFactory">
                  <property name="pool_size">1</property>
                  <property name="queue_size">10000</property>
               </async-executor>
               <security>
                  <authentication server-name="servername">
                     <digest username="username" password="password" realm="realm" />
                  </authentication>
                  <encryption protocol="TLSv1.2" sni-hostname="snihostname">
                     <keystore filename="${project.build.testOutputDirectory}/keystore_client.jks" password="secret" certificate-password="secret" key-alias="hotrod" type="JKS"/>
                     <truststore filename="${project.build.testOutputDirectory}/ca.jks" password="secret" type="JKS"/>
                  </encryption>
               </security>
            </remote-store>
         </persistence>
      </local-cache>
   </cache-container>

</infinispan>
