<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>6.0.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>
   <!-- TODO [anistor] investigate why can't we just merge this module into the HR server -->
   <artifactId>infinispan-remote-query</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Remote Query API</name>
   <description>Infinispan Remote Query API module</description>

   <!-- This module declares components that either has lifecycle (@Start or @Stop) or uses @Inject to retrieve dependencies -->
   <properties>
      <module.skipComponentMetaDataProcessing>false</module.skipComponentMetaDataProcessing>
   </properties>

   <dependencies>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-query</artifactId>
      </dependency>

      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-search-engine</artifactId>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-core</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan.protostream</groupId>
         <artifactId>protostream</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan.protostream</groupId>
         <artifactId>sample-domain-implementation</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <resources>
         <resource>
            <directory>src/main/resources</directory>
            <excludes>
               <exclude>*.proto</exclude>
            </excludes>
         </resource>

         <resource>
            <directory>${basedir}/target/protobuf-descriptors</directory>
         </resource>
      </resources>

      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <phase>initialize</phase>
                  <goals>
                     <goal>unpack</goal>
                  </goals>
                  <configuration>
                     <artifactItems>
                        <artifactItem>
                           <groupId>org.infinispan.protostream</groupId>
                           <artifactId>protostream</artifactId>
                           <overWrite>true</overWrite>
                           <outputDirectory>${project.build.directory}/protobuf-includes</outputDirectory>
                           <includes>**/*.proto</includes>
                        </artifactItem>
                     </artifactItems>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <!-- Execute protoc to parse our proto definitions and generate the serialized descriptor set. -->
         <!-- Ideally, we should use a dedicated maven plugin for this but none of the 3-4 available plugins actually work for us. -->
         <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
               <execution>
                  <id>compile-protoc</id>
                  <phase>generate-resources</phase>
                  <configuration>
                     <target>
                        <mkdir dir="${project.build.directory}/protobuf-descriptors/"/>
                        <exec executable="protoc" failonerror="true">
                           <arg value="--proto_path=${project.build.directory}/protobuf-includes"/>
                           <arg value="--proto_path=${project.basedir}/src/main/resources"/>
                           <arg value="--descriptor_set_out=${project.build.directory}/protobuf-descriptors/query.protobin"/>
                           <arg value="${project.basedir}/src/main/resources/query.proto"/>
                        </exec>
                     </target>
                  </configuration>
                  <goals>
                     <goal>run</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
               <execution>
                  <id>make-assembly</id>
                  <phase>package</phase>
                  <goals>
                     <goal>single</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <descriptors>
                  <descriptor>src/main/assembly/client-jar.xml</descriptor>
               </descriptors>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.remote-query.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>
