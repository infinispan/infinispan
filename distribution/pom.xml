<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>14.0.35.Final</version>
      <relativePath>../pom.xml</relativePath>
   </parent>
   <artifactId>infinispan-distribution</artifactId>
   <name>Infinispan Distribution</name>
   <packaging>pom</packaging>

    <repositories>
        <repository>
            <id>jboss-community</id>
            <url>https://repository.jboss.org/nexus/content/groups/public-jboss</url>
        </repository>
        <repository>
            <id>redhat</id>
            <url>https://maven.repository.redhat.com/ga/</url>
        </repository>
    </repositories>

   <dependencies>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-core</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-query</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-client-hotrod</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cli</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-cachestore-remote</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-spring5-embedded</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-spring5-remote</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-tools</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-extended-statistics</artifactId>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-javadoc-all</artifactId>
         <version>${version.infinispan}</version>
         <classifier>javadoc</classifier>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-feature-pack</artifactId>
         <version>${project.version}</version>
         <type>zip</type>
      </dependency>

      <dependency>
         <groupId>javax.cache</groupId>
         <artifactId>cache-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>jakarta.enterprise</groupId>
         <artifactId>jakarta.enterprise.cdi-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.jgroups.azure</groupId>
         <artifactId>jgroups-azure</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jgroups.kubernetes</groupId>
         <artifactId>jgroups-kubernetes</artifactId>
      </dependency>

   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
               <execution>
                  <id>copy-licenses-xml</id>
                  <phase>prepare-package</phase>
                  <goals>
                     <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${project.build.directory}/docs/licenses</outputDirectory>
                     <resources>
                        <resource>
                           <directory>${project.basedir}/src/main/resources/template</directory>
                           <includes>
                              <include>licenses.xml</include>
                              <include>licenses.css</include>
                           </includes>
                           <filtering>false</filtering>
                        </resource>
                        <resource>
                           <directory>${project.basedir}/src/main/resources/licenses</directory>
                           <includes>
                              <include>*</include>
                           </includes>
                           <filtering>false</filtering>
                        </resource>
                     </resources>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <!-- Collect licenses -->
         <plugin>
            <groupId>org.wildfly.maven.plugins</groupId>
            <artifactId>licenses-plugin</artifactId>
            <version>${versionx.org.wildfly.maven.plugins.licenses-plugin}</version>
            <inherited>false</inherited>
            <executions>
               <execution>
                  <id>update-licenses-xml</id>
                  <goals>
                     <goal>insert-versions</goal>
                  </goals>
                  <phase>prepare-package</phase>
                  <configuration>
                     <sortByGroupIdAndArtifactId>true</sortByGroupIdAndArtifactId>
                     <licensesOutputFile>${project.build.directory}/docs/licenses/licenses.xml</licensesOutputFile>
                     <excludedGroups>org.kohsuke</excludedGroups>
                     <excludedArtifacts>jboss-logging-processor|jdeparser|jcip-annotations|jboss-logging-annotations</excludedArtifacts>
                     <excludedScopes>system,test,runtime</excludedScopes>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.jboss.galleon</groupId>
            <artifactId>galleon-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>provision-modules</id>
                  <goals>
                     <goal>provision</goal>
                  </goals>
                  <phase>compile</phase>
                  <configuration>
                     <install-dir>${project.build.directory}/${infinispan.brand.prefix}-${wildfly.brand.prefix}-modules-${infinispan.brand.version}</install-dir>
                     <record-state>false</record-state>
                     <!-- true: uses local m2 cache only -->
                     <offline>false</offline>
                     <feature-packs>
                        <!-- Infinispan modules -->
                        <feature-pack>
                           <groupId>${project.groupId}</groupId>
                           <artifactId>infinispan-feature-pack</artifactId>
                           <version>${project.version}</version>
                           <inherit-configs>false</inherit-configs>
                        </feature-pack>
                     </feature-packs>
                     <plugin-options>
                        <!--
                        when true, the module.xml files only contains the maven coordinates of the jars to download when the server starts
                        when false, the plugin downloads the jars at build time
                         -->
                        <jboss-maven-dist>false</jboss-maven-dist>
                     </plugin-options>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
               <execution>
                  <id>assemble</id>
                  <phase>package</phase>
                  <goals>
                     <goal>single</goal>
                  </goals>
                  <configuration>
                     <descriptors>
                        <descriptor>src/main/assemblies/src.xml</descriptor>
                     </descriptors>
                     <finalName>${infinispan.brand.prefix}-${infinispan.brand.version}</finalName>
                  </configuration>
               </execution>
               <execution>
                  <id>assemble-modules</id>
                  <phase>package</phase>
                  <goals>
                     <goal>single</goal>
                  </goals>
                  <configuration>
                     <appendAssemblyId>false</appendAssemblyId>
                     <finalName>${infinispan.brand.prefix}-${wildfly.brand.prefix}-modules-${infinispan.brand.version}</finalName>
                     <descriptors>
                        <descriptor>src/main/assemblies/wildfly.xml</descriptor>
                     </descriptors>
                  </configuration>
               </execution>
               <execution>
                  <id>assemble-server</id>
                  <phase>package</phase>
                  <goals>
                     <goal>single</goal>
                  </goals>
                  <configuration>
                     <descriptors>
                        <descriptor>src/main/assemblies/server.xml</descriptor>
                     </descriptors>
                     <finalName>${infinispan.brand.prefix}-server-${infinispan.brand.version}</finalName>
                     <appendAssemblyId>false</appendAssemblyId>
                  </configuration>
               </execution>
            </executions>
            <configuration>
               <outputDirectory>${project.build.directory}/distribution</outputDirectory>
               <workDirectory>${project.build.directory}/assembly/work</workDirectory>
               <attach>${org.infinispan.attachServerZip}</attach>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>
