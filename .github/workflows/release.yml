name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.INFINISPAN_MAVEN_GPG_ARMORED }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - id: images
        run: |
          BRANCH=${{ github.ref_name }}
          MAJOR=${BRANCH%.*.*.*}
          [ "${MAJOR}" -ge "15" ] && echo "images=true" >> ${GITHUB_OUTPUT} || true

      - name: Update proto.lock files
        run: |
          mvn -B clean install -DskipTests -DcommitProtoLockChanges=true -Dcheckstyle.skip

      - name: Set release version
        run: |
          mvn -B versions:set -DprocessAllModules=true -DnewVersion=${{ github.event.inputs.version }}
          mvn -B versions:set-property -Dproperty=version.infinispan -DnewVersion=${{ github.event.inputs.version }}
          sed -i "s/^:ispn_version:.*\$/:ispn_version: ${{ github.event.inputs.version }}/" documentation/src/main/asciidoc/topics/attributes/community-attributes.adoc
          git commit --no-verify -a -m "Releasing ${{ github.event.inputs.version }}"

      - name: Publish to Central
        run: mvn -B -Drelease-mode=upstream -Pdistribution -Pcommunity-release -DskipTests clean deploy -Dinfinispan.brand.version=${{ github.event.inputs.version }}
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_CENTRAL_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_CENTRAL_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.INFINISPAN_MAVEN_GPG_PASSPHRASE }}

      - name: Tag Release
        run: |
          git tag -a ${{ github.event.inputs.version }} -m ${{ github.event.inputs.version }} 

      - name: Next Version
        run: |
          mvn -B versions:set -DprocessAllModules=true -DnewVersion=${{ github.event.inputs.nextVersion }}
          mvn -B versions:set-property -Dproperty=version.infinispan -DnewVersion=${{ github.event.inputs.nextVersion }}
          git commit --no-verify -a -m "Next version ${{ github.event.inputs.nextVersion }}"

      - name: Push changes
        run: |
          git push --tags origin ${{ github.event.inputs.branch }}

      - name: Create Release
        run: |
          gh release create ${{ github.event.inputs.version }} --generate-notes
          gh release upload ${{ github.event.inputs.version }} distribution/target/distribution/infinispan-server-${{ github.event.inputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.INFINISPAN_RELEASE_TOKEN }}

  native-cli:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2022]
        include:
          - os: ubuntu-latest
            asset_name: linux-amd64
            gu_binary: gu
          - os: macos-latest
            asset_name: darwin-arm64
            gu_binary: gu
          - os: windows-2022
            asset_name: windows-amd64
            gu_binary: gu.cmd
    steps:
      - uses: actions/checkout@v4

      - if: ${{ matrix.os == 'windows-2022' }}
        name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2.0.0

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout Release Tag
        uses: actions/checkout@v4

      - if: ${{ matrix.os == 'windows-2022' }}
        name: Build native executable
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86_amd64
          mvnw.cmd package -Pdistribution -Pwindows -Pnative -am -pl quarkus/cli
        shell: cmd

      - if: ${{ matrix.os != 'windows-2022' }}
        name: Build native executable
        run: ./mvnw package -Pdistribution -Pnative -am -pl quarkus/cli

      - name: Upload CLI native executable
        id: upload-cli-native-executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:  ${{ needs.release.outputs.upload_url }}
          asset_path: ./quarkus/cli/target/infinispan-cli-${{github.ref_name}}.zip
          asset_name: infinispan-cli-${{github.ref_name}}-${{ matrix.asset_name }}.zip
          asset_content_type: application/zip

  operator:
    needs: images
    if: contains(github.ref_name, '.Final')
    uses: infinispan/infinispan-operator/.github/workflows/add_operand.yml@main
    secrets: inherit
    with:
      image: quay.io/infinispan/server:${{ github.ref_name }}
      ref: main
      repository: infinispan/infinispan-operator
