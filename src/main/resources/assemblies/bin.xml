<?xml version="1.0" encoding="UTF-8"?>
<!--
   This package will build a ZIP containing the following:

   - infinispan-embedded.jar
   - infinispan-embedded-query.jar
   + modules
      + tree
         - infinispan-tree.jar
         + lib (additional dependencies for tree)

      .. etc ...

   + bin (any scripts, etc)
   + etc (sample configs, resources, etc from src/main/resources)
   + doc (release notes, etc from src/main/release)
-->
<assembly
      xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
   <id>bin</id>

   <baseDirectory>${project.artifactId}-${project.version}-bin</baseDirectory>

   <formats>
      <format>zip</format>
   </formats>

   <moduleSets>

      <!--
         Gather all transitive runtime dependencies and place them in lib dir of the zip package (runtime-classpath.txt of each module will reference them from here).
         This is done in a single moduleSet instead of the 'binaries' section of each module in order to avoid the issue with possibly skipped dependencies or
         incorrectly resolved versions that is already described in the assembly plugin user guide in relation with multiple moduleSets. This issue appeared in
         version 2.2 of the plugin and is a documented limitation of the moduleSets mechanism (which might become deprecated in the future). The user guide
         recommends avoiding moduleSets altogether in favor of dependencySets but that solution does not work in our case because we would not be able to include
         other files in the distribution (scripts, config files, demo data files, etc). That means we'll continue to live (dangerously) with moduleSets.
      -->
      <moduleSet>
         <includeSubModules>false</includeSubModules>
         <includes>
            <include>org.infinispan:infinispan-rhq-plugin</include>
            <include>org.infinispan:infinispan-tree</include>
            <include>org.infinispan:infinispan-cli-client</include>
            <include>org.infinispan:infinispan-cli-server</include>
            <include>org.infinispan:infinispan-gui-demo</include>
            <include>org.infinispan:infinispan-cdi</include>
         </includes>

         <binaries>
            <unpack>false</unpack>
            <outputDirectory>lib</outputDirectory>
            <dependencySets>
               <dependencySet>
                  <useStrictFiltering>true</useStrictFiltering>
                  <useTransitiveDependencies>true</useTransitiveDependencies>
                  <useTransitiveFiltering>true</useTransitiveFiltering>
                  <outputDirectory>lib</outputDirectory>
               </dependencySet>
            </dependencySets>
         </binaries>
      </moduleSet>

      <!-- Core modules -->
      <moduleSet>
         <includeSubModules>false</includeSubModules>
         <includes>
            <include>org.infinispan:infinispan-embedded</include>
            <include>org.infinispan:infinispan-embedded-query</include>
         </includes>
         <sources>
            <includeModuleDirectory>false</includeModuleDirectory>

            <fileSets>
               <!-- Executable resources -->
               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>unix</lineEnding>
                  <includes>
                     <include>**/*.sh</include>
                     <include>**/*.py</include>
                     <include>**/*.rb</include>
                  </includes>
                  <fileMode>0755</fileMode>
               </fileSet>

               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>dos</lineEnding>
                  <includes>
                     <include>**/*.cmd</include>
                     <include>**/*.bat</include>
                  </includes>
                  <fileMode>0644</fileMode>
               </fileSet>

               <!-- Configuration resources -->
               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>unix</lineEnding>
                  <includes>
                     <include>**/*.properties</include>
                     <include>**/*.xml</include>
                     <include>**/*.xsd</include>
                     <include>**/*.html</include>
                     <include>**/*.js</include>
                     <include>**/*.css</include>
                  </includes>
               </fileSet>

               <!-- Binary resources -->
               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>keep</lineEnding>
                  <includes>
                     <include>**/*.gz</include>
                  </includes>
               </fileSet>

               <!-- Schema -->
               <fileSet>
                  <directory>target/classes</directory>
                  <outputDirectory>etc</outputDirectory>
                  <lineEnding>unix</lineEnding>
                  <includes>
                     <include>**/*.xsd</include>
                  </includes>
               </fileSet>

               <!-- Log4j XML -->
               <fileSet>
                  <directory>src/test/resources</directory>
                  <outputDirectory>etc</outputDirectory>
                  <lineEnding>unix</lineEnding>
                  <includes>
                     <include>log4j.xml</include>
                  </includes>
               </fileSet>

               <!-- EULAs and license files -->
               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>dos</lineEnding>
                  <includes>
                     <include>**/*.txt</include>
                  </includes>
               </fileSet>

               <!-- runtime-classpath.txt file -->
               <fileSet>
                  <directory>target</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>keep</lineEnding>
                  <includes>
                     <include>runtime-classpath.txt</include>
                  </includes>
               </fileSet>
            </fileSets>

         </sources>

         <binaries>
            <outputFileNameMapping>
               ${module.artifactId}.${module.extension}
            </outputFileNameMapping>
            <unpack>false</unpack>
         </binaries>
      </moduleSet>

      <!-- Rest of modules except demos, rest server and cache stores -->
      <moduleSet>
         <includeSubModules>false</includeSubModules>
         <includes>
            <include>org.infinispan:infinispan-rhq-plugin</include>
            <include>org.infinispan:infinispan-tree</include>
            <include>org.infinispan:infinispan-cli-client</include>
            <include>org.infinispan:infinispan-cli-server</include>
         </includes>
         <sources>
            <includeModuleDirectory>false</includeModuleDirectory>

            <fileSets>
               <!-- Executable resources -->
               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>unix</lineEnding>
                  <includes>
                     <include>**/*.sh</include>
                     <include>**/*.py</include>
                     <include>**/*.rb</include>
                  </includes>
                  <fileMode>0755</fileMode>
               </fileSet>

               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>dos</lineEnding>
                  <includes>
                     <include>**/*.cmd</include>
                     <include>**/*.bat</include>
                  </includes>
                  <fileMode>0644</fileMode>
               </fileSet>

               <!-- Configuration resources -->
               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>unix</lineEnding>
                  <includes>
                     <include>**/*.properties</include>
                     <include>**/*.xml</include>
                     <include>**/*.xsd</include>
                     <include>**/*.html</include>
                     <include>**/*.js</include>
                     <include>**/*.css</include>
                  </includes>
               </fileSet>

               <!-- Binary resources -->
               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>keep</lineEnding>
                  <includes>
                     <include>**/*.gz</include>
                  </includes>
               </fileSet>

               <!-- Schema -->
               <fileSet>
                  <directory>target/classes</directory>
                  <outputDirectory>etc</outputDirectory>
                  <lineEnding>unix</lineEnding>
                  <includes>
                     <include>**/*.xsd</include>
                  </includes>
               </fileSet>

               <!-- EULAs and license files -->
               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>dos</lineEnding>
                  <includes>
                     <include>**/*.txt</include>
                  </includes>
               </fileSet>

               <!-- runtime-classpath.txt file -->
               <fileSet>
                  <directory>target</directory>
                  <outputDirectory>modules/${module.basedir.name}</outputDirectory>
                  <lineEnding>keep</lineEnding>
                  <includes>
                     <include>runtime-classpath.txt</include>
                  </includes>
               </fileSet>
            </fileSets>

         </sources>

         <binaries>
            <outputDirectory>modules/${module.basedir.name}</outputDirectory>
            <outputFileNameMapping>
               ${module.artifactId}.${module.extension}
            </outputFileNameMapping>
            <unpack>false</unpack>
         </binaries>
      </moduleSet>

      <!-- GUI demo only! -->
      <moduleSet>
         <includeSubModules>false</includeSubModules>
         <includes>
            <include>org.infinispan:infinispan-gui-demo</include>
         </includes>
         <sources>
            <includeModuleDirectory>false</includeModuleDirectory>

            <fileSets>
               <!-- Executable resources -->
               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>unix</lineEnding>
                  <includes>
                     <include>**/*.sh</include>
                     <include>**/*.py</include>
                     <include>**/*.rb</include>
                  </includes>
                  <fileMode>0755</fileMode>
               </fileSet>

               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>dos</lineEnding>
                  <includes>
                     <include>**/*.cmd</include>
                     <include>**/*.bat</include>
                  </includes>
                  <fileMode>0644</fileMode>
               </fileSet>

               <!-- Configuration resources -->
               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>unix</lineEnding>
                  <includes>
                     <include>**/*.properties</include>
                     <include>**/*.xml</include>
                     <include>**/*.xsd</include>
                     <include>**/*.html</include>
                     <include>**/*.js</include>
                     <include>**/*.css</include>
                  </includes>
               </fileSet>
               
               <!-- Binary resources -->
               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>keep</lineEnding>
                  <includes>
                     <include>**/*.gz</include>
                  </includes>
               </fileSet>

               <!-- Schema -->
               <fileSet>
                  <directory>target/classes</directory>
                  <outputDirectory>etc</outputDirectory>
                  <lineEnding>unix</lineEnding>
                  <includes>
                     <include>**/*.xsd</include>
                  </includes>
               </fileSet>

               <!-- EULAs and license files -->
               <fileSet>
                  <directory>src/main/release</directory>
                  <outputDirectory></outputDirectory>
                  <lineEnding>dos</lineEnding>
                  <includes>
                     <include>**/*.txt</include>
                  </includes>
               </fileSet>

               <!-- runtime-classpath.txt file -->
               <fileSet>
                  <directory>target</directory>
                  <outputDirectory>modules/demos/${module.basedir.name}</outputDirectory>
                  <lineEnding>keep</lineEnding>
                  <includes>
                     <include>runtime-classpath.txt</include>
                  </includes>
               </fileSet>
            </fileSets>

         </sources>

         <binaries>
            <outputDirectory>modules/demos/${module.basedir.name}</outputDirectory>
            <outputFileNameMapping>
               ${module.artifactId}.${module.extension}
            </outputFileNameMapping>
            <unpack>false</unpack>
         </binaries>
      </moduleSet>

      <!-- CDI -->
      <moduleSet>
         <includeSubModules>false</includeSubModules>
         <includes>
            <include>org.infinispan:infinispan-cdi</include>
         </includes>
         <sources>
            <includeModuleDirectory>false</includeModuleDirectory>

            <fileSets>
               <!-- runtime-classpath.txt file -->
               <fileSet>
                  <directory>target</directory>
                  <lineEnding>keep</lineEnding>
                  <outputDirectory>modules/cdi</outputDirectory>
                  <includes>
                     <include>runtime-classpath.txt</include>
                  </includes>
               </fileSet>
            </fileSets>
         </sources>

         <binaries>
            <outputDirectory>modules/cdi</outputDirectory>
            <outputFileNameMapping>
               ${module.artifactId}.${module.extension}
            </outputFileNameMapping>
            <unpack>false</unpack>
         </binaries>
      </moduleSet>

   </moduleSets>

   <fileSets>

      <!-- docs -->
      <fileSet>
         <directory>target/site/apidocs</directory>
         <outputDirectory>doc/api</outputDirectory>
      </fileSet>

   </fileSets>

</assembly>
