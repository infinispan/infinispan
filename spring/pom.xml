<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>5.1.0-SNAPSHOT</version>
      <relativePath>../parent/pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-spring</artifactId>
   <packaging>bundle</packaging>

   <name>Infinispan Spring Integration</name>
   <description>
        <![CDATA[
                 The Infinispan Spring Integration project provides Spring 
                 integration for Infinispna, a high performance distributed cache.
                 Its primary features are
                 
                  * An implementation of org.springframework.cache.CacheManager,
                    Spring's central caching abstraction, backed by Infinispan's
                    EmbeddedCacheManager. To be used if your Spring-powered
                    application and Infinispan are colocated, i.e. running within
                    the same VM.
                  * An implementation of org.springframework.cache.CacheManager
                    backed by Infinispan's RemoteCacheManager. To bes used if your
                    Spring-powered application accesses Infinispan remotely, i.e.
                    over the network.
                  * An implementation of org.springframework.cache.CacheManager
                    backed by a CacheContainer reference. To be used if your Spring-
                    powered application needs access to a CacheContainer defined
                    outside the application (e.g. retrieved from JNDI)
                  * Spring namespace support allowing shortcut definitions for all the
                    components above

                 In addition, Infinispan Spring Integration offers various FactoryBeans
                 for facilitating creation of Infinispan core classes - Cache, CacheManager,
                 ... - within a Spring context.
        ]]>
    </description>

	<!-- =================================================== -->
	<!-- Developers section -->
	<!-- =================================================== -->

   <developers>
      <developer>
         <id>obergner</id>
         <name>Olaf Bergner</name>
         <email>olaf DOT bergner AT gmx DOT de</email>
         <roles>
            <role>Project Admin</role>
            <role>Developer</role>
         </roles>
         <timezone>0</timezone>
      </developer>
      <developer>
         <id>marius.bogoevici</id>
         <name>Marius Bogoevici</name>
         <email>marius.bogoevici AT gmail.com</email>
         <roles>
             <role>Developer</role>
         </roles>
         <timezone>-5</timezone>
       </developer>
   </developers>

	<!-- =================================================== -->
	<!-- Global properties -->
	<!-- =================================================== -->

   <properties>
		<!-- Make the build platform independent: http://maven.apache.org/general.html#encoding-warning -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- ######################################################### -->
		<!-- Dependency versions -->
		<!-- ######################################################### -->
		<!-- Spring -->
      <version.spring>3.1.0.RELEASE</version.spring>
      <version.commons.dbcp>1.4</version.commons.dbcp>
   </properties>

	<!-- =================================================== -->
	<!-- Project Dependencies -->
	<!-- =================================================== -->

   <dependencies>
		<!--Compile time dependencies -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
         <version>${version.spring}</version>
         <scope>compile</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <version>${project.version}</version>
         <scope>compile</scope>
      </dependency>
      <!-- Made the RHQ dependency non-transitive in case we only need the remote cache -->
      <dependency>
         <groupId>org.rhq.helpers</groupId>
         <artifactId>rhq-pluginAnnotations</artifactId>
         <version>${version.rhq.pluginAnnotations}</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-client-hotrod</artifactId>
         <version>${project.version}</version>
         <scope>compile</scope>
         <optional>true</optional>
         <exclusions>
            <exclusion>
               <groupId>org.apache.hadoop</groupId>
               <artifactId>avro</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

		<!--Runtime dependencies -->
      <dependency>
         <groupId>commons-pool</groupId>
         <artifactId>commons-pool</artifactId>
         <version>${version.commons.pool}</version>
         <scope>runtime</scope>
      </dependency>
      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
         <version>${version.commons.logging}</version>
         <scope>runtime</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-aop</artifactId>
         <version>${version.spring}</version>
         <scope>runtime</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-asm</artifactId>
         <version>${version.spring}</version>
         <scope>runtime</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-expression</artifactId>
         <version>${version.spring}</version>
         <scope>runtime</scope>
      </dependency>
      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
         <version>${version.log4j}</version>
         <scope>runtime</scope>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.jgroups</groupId>
         <artifactId>jgroups</artifactId>
         <version>${version.jgroups}</version>
         <scope>runtime</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.marshalling</groupId>
         <artifactId>jboss-marshalling</artifactId>
         <version>${version.jboss.marshalling}</version>
         <scope>runtime</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.marshalling</groupId>
         <artifactId>jboss-marshalling-river</artifactId>
         <version>${version.jboss.marshalling}</version>
         <scope>runtime</scope>
      </dependency>

		<!--Test Dependencies -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-test</artifactId>
         <version>${version.spring}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-core</artifactId>
         <version>${project.version}</version>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-client-hotrod</artifactId>
         <version>${project.version}</version>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
         <version>${project.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>infinispan-server-hotrod</artifactId>
         <version>${project.version}</version>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-jdbc</artifactId>
         <version>${version.spring}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <version>${version.h2.driver}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>commons-dbcp</groupId>
         <artifactId>commons-dbcp</artifactId>
         <version>${version.commons.dbcp}</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

	<!-- =================================================== -->
	<!-- Project Plugins -->
	<!-- =================================================== -->

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <version>${version.maven.bundle}</version>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.spring.*;version=${project.version};-split-package:=error
                  </Export-Package>
               </instructions>
            </configuration>
         </plugin>
      </plugins>
   </build>

</project>
