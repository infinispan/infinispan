<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified"  version="1.0"
           targetNamespace="urn:infinispan:config:cassandra:5.3"
           xmlns:tns="urn:infinispan:config:cassandra:5.3"
           xmlns:config="urn:infinispan:config:5.3" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="urn:infinispan:config:5.3"
             schemaLocation="http://www.infinispan.org/schemas/infinispan-config-5.3.xsd" />

  <xs:element name="cassandraStore">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="config:store">
          <xs:sequence>
            <xs:element name="servers" type="tns:servers" minOccurs="0">
              <xs:annotation>
                <xs:documentation>
                  This is the initial list of Cassandra servers to connect to.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="autoCreateKeyspace" type="xs:boolean" default="true">
            <xs:annotation>
              <xs:documentation>
                Determines whether the KeySpace should be automatically created on startup.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="configurationPropertiesFile" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                A configuration properties file used to configure the Cassandra connection pool. The file specified needs to be available on the classpath, or must be an absolute path to a valid properties file.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="entryColumnFamily" type="xs:string" default="InfinispanEntries">
            <xs:annotation>
              <xs:documentation>
                The column family for entries
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="expirationColumnFamily" type="xs:string" default="InfinispanExpiration">
            <xs:annotation>
              <xs:documentation>
                The column family for expiration information
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="framed" type="xs:boolean" default="true">
            <xs:annotation>
              <xs:documentation>
                Whether to use framed connection mode. Defaults to true
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="keySpace" type="xs:string" default="Infinispan">
            <xs:annotation>
              <xs:documentation>
                The KeySpace to use
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="password" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                The password to use when authenticating with the servers
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="sharedKeyspace" type="xs:boolean" default="false">
            <xs:annotation>
              <xs:documentation>
                Whether the KeySpace is shared between multiple caches
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="readConsistencyLevel" type="tns:consistencyLevel" default="ONE">
            <xs:annotation>
              <xs:documentation>
                The consistency level to use for read operations
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="username" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                The username to use when authenticating with the servers
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="writeConsistencyLevel" type="tns:consistencyLevel" default="ONE">
            <xs:annotation>
              <xs:documentation>
                The consistency level to use for write operations
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
  <xs:complexType name="servers">
    <xs:sequence>
      <xs:element name="server" minOccurs="1" maxOccurs="unbounded">
        <xs:complexType>
          <xs:attribute name="host" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>
                The hostname or ip address of a remote Cassandra server
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="port" type="xs:int" default="9160">
            <xs:annotation>
              <xs:documentation>
                The port on which the server is listening (default 9160)
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  
  <xs:simpleType name="consistencyLevel">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ONE">
        <xs:annotation>
          <xs:documentation>
            Ensure that the write has been written to at least 1 node's commit log and memory table.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="QUORUM">
        <xs:annotation>
          <xs:documentation>
            Ensure that the write has been written to ReplicationFactor / 2 + 1 nodes 
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LOCAL_QUORUM">
        <xs:annotation>
          <xs:documentation>
            Ensure that the write has been written to ReplicationFactor / 2 + 1 nodes, within the local datacenter (requires NetworkTopologyStrategy). 
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EACH_QUORUM">
        <xs:annotation>
          <xs:documentation>
            Ensure that the write has been written to ReplicationFactor / 2 + 1 nodes in each datacenter (requires NetworkTopologyStrategy). 
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ALL">
        <xs:annotation>
          <xs:documentation>
            Ensure that the write is written to <code>&lt;ReplicationFactor&gt;</code> nodes before responding to the client. 
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ANY">
        <xs:annotation>
          <xs:documentation>
            Ensure that the write has been written once somewhere, including possibly being hinted in a non-target node. 
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TWO">
        <xs:annotation>
          <xs:documentation>
            Ensure that the write has been written to at least 2 node's commit log and memory table. 
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="THREE">
        <xs:annotation>
          <xs:documentation>
            Ensure that the write has been written to at least 3 node's commit log and memory table.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  
</xs:schema>
