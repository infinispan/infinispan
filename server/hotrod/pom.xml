<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-server-parent</artifactId>
      <version>9.4.24.DevAsyncTouch2</version>
      <relativePath>../pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-server-hotrod</artifactId>
   <packaging>bundle</packaging>
   <name>Infinispan Hot Rod Server</name>
   <description>Infinispan Hot Rod Server</description>

   <properties>
      <module.skipComponentMetaDataProcessing>false</module.skipComponentMetaDataProcessing>
      <certificate.dname>CN=HotRod_1,OU=Infinispan,O=JBoss,L=Red Hat,ST=World,C=WW</certificate.dname>
   </properties>

   <dependencies>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-server-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-server-core</artifactId>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-remote-query-server</artifactId>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-tasks</artifactId>
      </dependency>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-clustered-counter</artifactId>
      </dependency>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-multimap</artifactId>
      </dependency>
      <dependency>
         <groupId>org.testng</groupId>
         <artifactId>testng</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
               <execution>
                  <id>create-certificates</id>
                  <phase>process-test-resources</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <target>
                        <macrodef name="keytool">
                           <attribute name="command"/>
                           <element name="args"/>
                           <sequential>
                              <exec executable="${server.jvm}/bin/keytool">
                                 <arg value="@{command}"/>
                                 <!-- common arguments -->
                                 <arg value="-validity"/>
                                 <arg value="365"/>
                                 <arg value="-keyalg"/>
                                 <arg value="RSA"/>
                                 <arg value="-keysize"/>
                                 <arg value="2048"/>
                                 <arg value="-noprompt"/>
                                 <arg value="-storepass"/>
                                 <arg value="secret"/>
                                 <arg value="-keypass"/>
                                 <arg value="secret"/>
                                 <arg value="-storetype"/>
                                 <arg value="pkcs12"/>
                                 <!-- additional arguments -->
                                 <args/>
                              </exec>
                           </sequential>
                        </macrodef>
                        <mkdir dir="${project.build.testOutputDirectory}"/>
                        <delete quiet="true">
                           <fileset dir="${project.build.testOutputDirectory}" includes="*.jks,*.csr,*.cer,*.p12"/>
                        </delete>
                        <echo message="Generate the server certificate"/>
                        <keytool command="-genkeypair">
                           <args>
                              <arg value="-alias"/>
                              <arg value="default"/>
                              <arg value="-dname"/>
                              <arg value="${certificate.dname}"/>
                              <arg value="-keystore"/>
                              <arg value="${project.build.testOutputDirectory}/password_server_keystore.p12"/>
                           </args>
                        </keytool>
                        <keytool command="-genkeypair">
                           <args>
                              <arg value="-alias"/>
                              <arg value="default"/>
                              <arg value="-dname"/>
                              <arg value="${certificate.dname}"/>
                              <arg value="-keystore"/>
                              <arg value="${project.build.testOutputDirectory}/default_server_keystore.p12"/>
                           </args>
                        </keytool>
                        <keytool command="-genkeypair">
                           <args>
                              <arg value="-alias"/>
                              <arg value="sni"/>
                              <arg value="-dname"/>
                              <arg value="${certificate.dname}"/>
                              <arg value="-keystore"/>
                              <arg value="${project.build.testOutputDirectory}/sni_server_keystore.p12"/>
                           </args>
                        </keytool>
                        <keytool command="-genkeypair">
                           <args>
                              <arg value="-alias"/>
                              <arg value="sni"/>
                              <arg value="-dname"/>
                              <arg value="${certificate.dname}"/>
                              <arg value="-keystore"/>
                              <arg value="${project.build.testOutputDirectory}/no_trusted_clients_keystore.p12"/>
                           </args>
                        </keytool>
                        <keytool command="-importkeystore">
                           <args>
                              <arg value="-srckeystore"/>
                              <arg value="${project.build.testOutputDirectory}/password_server_keystore.p12"/>
                              <arg value="-srcstorepass"/>
                              <arg value="secret"/>
                              <arg value="-destkeystore"/>
                              <arg value="${project.build.testOutputDirectory}/password_client_truststore.p12"/>
                              <arg value="-deststorepass"/>
                              <arg value="secret"/>
                              <arg value="-srcstoretype"/>
                              <arg value="pkcs12"/>
                              <arg value="-deststoretype"/>
                              <arg value="pkcs12"/>
                           </args>
                        </keytool>
                        <keytool command="-importkeystore">
                           <args>
                              <arg value="-srckeystore"/>
                              <arg value="${project.build.testOutputDirectory}/default_server_keystore.p12"/>
                              <arg value="-srcstorepass"/>
                              <arg value="secret"/>
                              <arg value="-destkeystore"/>
                              <arg value="${project.build.testOutputDirectory}/default_client_truststore.p12"/>
                              <arg value="-deststorepass"/>
                              <arg value="secret"/>
                              <arg value="-srcstoretype"/>
                              <arg value="pkcs12"/>
                              <arg value="-deststoretype"/>
                              <arg value="pkcs12"/>
                           </args>
                        </keytool>
                        <keytool command="-importkeystore">
                           <args>
                              <arg value="-srckeystore"/>
                              <arg value="${project.build.testOutputDirectory}/sni_server_keystore.p12"/>
                              <arg value="-srcstorepass"/>
                              <arg value="secret"/>
                              <arg value="-destkeystore"/>
                              <arg value="${project.build.testOutputDirectory}/sni_client_truststore.p12"/>
                              <arg value="-deststorepass"/>
                              <arg value="secret"/>
                              <arg value="-srcstoretype"/>
                              <arg value="pkcs12"/>
                              <arg value="-deststoretype"/>
                              <arg value="pkcs12"/>
                           </args>
                        </keytool>
                     </target>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
               <instructions>
                  <Export-Package>
                     ${project.groupId}.server.hotrod.*;version=${project.version};-split-package:=error
                  </Export-Package>
                  <Include-Resource>
                     {maven-resources},
                     ${project.build.outputDirectory}/${project.artifactId}-component-metadata.dat
                  </Include-Resource>
               </instructions>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-protocol-parser-generator-maven-plugin</artifactId>
            <version>${project.version}</version>
            <configuration>
               <files>
                  <file>${basedir}/src/main/resources/hotrod.gr</file>
               </files>
            </configuration>
            <executions>
               <execution>
                  <goals>
                     <goal>generate</goal>
                  </goals>
                  <phase>generate-sources</phase>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <dependenciesToScan>
                  <!-- TestNGSuiteChecksTest -->
                  <dependency>org.infinispan:infinispan-commons-test</dependency>
               </dependenciesToScan>
            </configuration>
         </plugin>
      </plugins>
      <resources>
         <resource>
            <directory>src/main/resources</directory>
            <excludes>
               <exclude>hotrod.gr</exclude>
            </excludes>
         </resource>
      </resources>
   </build>
</project>
