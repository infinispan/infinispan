<infinispan
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="urn:infinispan:config:10.0 http://www.infinispan.org/schemas/infinispan-config-10.0.xsd
                            urn:infinispan:server:10.0 http://www.infinispan.org/schemas/infinispan-server-10.0.xsd"
        xmlns="urn:infinispan:config:10.0"
        xmlns:server="urn:infinispan:server:10.0">

   <cache-container/>

   <server xmlns="urn:infinispan:server:10.0">
      <interfaces>
         <interface name="default">
            <loopback/>
         </interface>
         <interface name="another">
            <loopback/>
         </interface>
      </interfaces>

      <socket-bindings default-interface="default" port-offset="${infinispan.socket.binding.port-offset:0}">
         <socket-binding name="default" port="11222"/>
         <socket-binding name="memcached" port="11221"/>
      </socket-bindings>

      <security>
         <security-realms>
            <security-realm name="default">
               <properties-realm groups-attribute="Roles">
                  <user-properties path="ServerConfigurationParserTest-user.properties" relative-to="infinispan.server.config.path" plain-text="true"/>
                  <group-properties path="ServerConfigurationParserTest-group.properties" relative-to="infinispan.server.config.path" />
               </properties-realm>
               <server-identities>
                  <ssl>
                     <keystore path="ServerConfigurationParserTest-keystore.pfx" relative-to="infinispan.server.config.path"
                               keystore-password="password" alias="server" key-password="password"
                               generate-self-signed-certificate-host="localhost"/>
                  </ssl>
               </server-identities>
            </security-realm>
         </security-realms>
      </security>

      <endpoints socket-binding="default" security-realm="default">
         <hotrod-connector name="hotrod"/>
         <rest-connector name="rest"/>
         <memcached-connector socket-binding="memcached"/>
      </endpoints>
   </server>
</infinispan>
