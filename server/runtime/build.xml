<project name="server" basedir=".">

   <target name="clean">
      <delete dir="${output.dir}"/>
   </target>

   <target name="build">
      <mkdir dir="${output.dir}"/>
      <copy todir="${output.dir}">
         <fileset dir="${server.dir}"/>
         <filterset refid="brandfilter"/>
      </copy>
      <chmod dir="${output.dir}/bin" perm="ugo+x" includes="*.sh"/>
      <copy todir="${output.dir}/boot" flatten="true">
         <fileset file="${project.build.directory}/${project.artifactId}-${project.version}-loader.jar"/>
      </copy>
      <copy todir="${output.dir}/lib">
         <fileset refid="maven.project.dependencies"/>
         <fileset file="${project.build.directory}/${project.artifactId}-${project.version}.jar"/>
         <chainedmapper>
            <flattenmapper/>
            <!-- hack to rewrite the netty os-arch classifier -->
            <compositemapper>
               <regexpmapper from="netty-transport-native-epoll-(.*)-linux-(.*)\.jar" to="netty-transport-native-epoll-linux-\2-\1.jar"/>
               <regexpmapper from="netty-incubator-transport-native-io_uring-(.*)-linux-(.*)\.jar" to="netty-incubator-transport-native-io_uring-linux-\2-\1.jar"/>
               <regexpmapper from="^(?!.*x86_64[.]jar$$).*$$" to="\0"/>
            </compositemapper>
         </chainedmapper>
      </copy>
      <delete dir="${output.dir}/lib">
         <include name="jcip-annotations*.jar"/>
      </delete>
      <copy todir="${test.lib.dir}" flatten="true">
         <fileset refid="maven.test.dependencies"/>
      </copy>
      <unzip dest="${output.dir}/docs/schema">
         <fileset dir="${output.dir}/lib">
            <include name="infinispan-*.jar"/>
            <include name="jgroups-*.jar"/>
         </fileset>
         <patternset>
            <include name="**/*.xsd"/>
         </patternset>
         <mapper type="flatten"/>
      </unzip>
      <copy todir="${output.dir}/docs/licenses/">
         <fileset dir="${licenses.template.dir}">
            <include name="licenses.css"/>
         </fileset>
      </copy>
      <java classname="org.infinispan.tools.licenses.LicenseMerger">
         <arg line="-v"/>
         <arg line="-o"/>
         <arg line="${output.dir}/docs/licenses/licenses.xml"/>
         <arg line="${output.dir}/static/console/META-INF/licenses/licenses-console.xml"/>
         <arg line="${output.dir}/docs/licenses/licenses.xml"/>
         <classpath>
            <pathelement path="${plugin_classpath}"/>
         </classpath>
      </java>
      <java classname="org.infinispan.tools.licenses.LicenseReplacer">
         <arg value="-i"/>
         <arg value="${licenses.template.dir}/licenses-overwrite.xml"/>
         <arg value="-l"/>
         <arg value="${output.dir}/docs/licenses/licenses.xml"/>
         <arg value="-o"/>
         <arg value="${output.dir}/docs/licenses/licenses.xml"/>
         <classpath>
            <pathelement path="${plugin_classpath}"/>
         </classpath>
      </java>
      <copy todir="${output.dir}/docs/licenses/">
         <fileset dir="${licenses.data.dir}">
            <include name="apache license 2.0.txt"/>
            <include name="bsd-0-clause.txt"/>
            <include name="bsd-2-clause.txt"/>
            <include name="bsd-3-clause.txt"/>
            <include name="cc0-1.0.txt"/>
            <include name="cddl-1.1-gpl-1-1.txt"/>
            <include name="cddl-gplv2-classpath.txt"/>
            <include name="common development and distribution license 1.1.txt"/>
            <include name="dual license consisting of the cddl v1.1 and gpl v2 - cddl+gpl-1.1"/>
            <include name="eclipse public license 2.0.txt"/>
            <include name="gnu general public license v2.0 only, with classpath exception.txt"/>
            <include name="gnu general public license, version 2.txt"/>
            <include name="gnu lesser general public license v2.1 only.txt"/>
            <include name="indiana university extreme! lab software license, version 1.1.1 - license.txt"/>
            <include name="isc-license.txt"/>
            <include name="mit license.txt"/>
            <include name="mozilla public license 1.1.txt"/>
            <include name="ofl-1.1.txt"/>
            <include name="xstream-bsd.txt"/>
         </fileset>
      </copy>
   </target>

   <target name="default">
      <echo level="info" message="This script needs to be executed by the maven ant plugin"/>
   </target>

</project>
