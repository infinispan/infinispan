<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ JBoss, Home of Professional Open Source
  ~ Copyright 2010 Red Hat Inc. and/or its affiliates and other
  ~ contributors as indicated by the @author tags. All rights reserved.
  ~ See the copyright.txt in the distribution for a full listing of
  ~ individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->
<!DOCTYPE web-app
        PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>
   <display-name>Infinispan-GridGF-WebDAV</display-name>
   <description>WebDAV interface to Infinispan's GridFS</description>

   <!-- a startup servlet to init caches -->
   <servlet>
      <servlet-name>InitServlet</servlet-name>
      <servlet-class>org.infinispan.demos.gridfs.CacheManagerHolder</servlet-class>

      <!-- specify your cache configuration file -->
      <init-param>
         <param-name>infinispan.config</param-name>
         <param-value>infinispan.xml</param-value>
      </init-param>

      <!-- specify your data cache name, as defined in your configuration file -->
      <init-param>
         <param-name>infinispan.gridfs.cache.data</param-name>
         <param-value>data</param-value>
      </init-param>

      <!-- specify your metadata cache name, as defined in your configuration file -->
      <init-param>
         <param-name>infinispan.gridfs.cache.metadata</param-name>
         <param-value>metadata</param-value>
      </init-param>

      <load-on-startup>1</load-on-startup>
   </servlet>

   <servlet>
      <servlet-name>webdav</servlet-name>
      <servlet-class>
         net.sf.webdav.WebdavServlet
      </servlet-class>
      <init-param>
         <param-name>ResourceHandlerImplementation</param-name>
         <param-value>
            org.infinispan.demos.gridfs.GridStore
         </param-value>
         <description>
            name of the class that implements
            net.sf.webdav.WebdavStore
         </description>
      </init-param>
      <init-param>
         <param-name>rootpath</param-name>
         <param-value>/tmp/webdav</param-value>
         <description>
            place where to store the webdavcontent on the filesystem
         </description>
      </init-param>

      <init-param>
         <param-name>lazyFolderCreationOnPut</param-name>
         <param-value>0</param-value>
         <description>
            Overriding RFC 2518, the folders of resources being
            created, can be created too if they do not exist.
         </description>
      </init-param>
      <init-param>
         <param-name>no-content-length-headers</param-name>
         <param-value>0</param-value>
         <description>
            TODO
         </description>
      </init-param>
      <init-param>
         <param-name>default-index-file</param-name>
         <param-value></param-value>
      </init-param>
      <init-param>
         <param-name>instead-of-404</param-name>
         <param-value></param-value>
      </init-param>
      <init-param>
         <param-name>maxUploadSize</param-name>
         <param-value>2000000000</param-value>
         <!-- set to 2G -->
      </init-param>

   </servlet>

   <!-- The mapping for the webdav servlet -->
   <!-- Using /* as the mapping ensures that jasper, welcome files etc are
       over-ridden and all requests are processed by the webdav servlet.
       This also overcomes a number of issues with some webdav clients
       (including MS Webfolders) that do not respond correctly
  to the
       redirects (302) that result from using a mapping of / -->
   <servlet-mapping>
      <servlet-name>webdav</servlet-name>
      <url-pattern>/*</url-pattern>
   </servlet-mapping>

   <welcome-file-list>
      <welcome-file />
   </welcome-file-list>

</web-app>
